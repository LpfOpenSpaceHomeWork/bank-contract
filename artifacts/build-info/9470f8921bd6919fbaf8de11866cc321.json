{
	"id": "9470f8921bd6919fbaf8de11866cc321",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"token-bank-v2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { TokenBank } from \"./token-bank.sol\";\nimport { TestToken } from \"./test-token.sol\";\n\ncontract TokenBankV2 is TokenBank {\n\n    constructor(TestToken _token) TokenBank(_token) {\n    }\n\n    function tokensReceived(address from, uint256 amount) external {\n        require(msg.sender == address(token), \"Only the TestToken Contract can call the hook\");\n        deposits[from] += amount;\n    }\n}"
			},
			"test-token.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\nlibrary Address {\n    function isContract(address addr) internal view returns (bool) {\n        uint256 size;\n        assembly { size := extcodesize(addr) }\n        return size > 0;\n    }\n}\n\nerror FailedToCallTokenReceivedHook();\n\ncontract TestToken is ERC20, Ownable {\n    using Address for address;\n    constructor()\n        ERC20(\"TestToken\", \"TT\")\n        Ownable(msg.sender)\n    {}\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function transferWithCallback(address to, uint256 amount) external returns (bool) {\n        address from = msg.sender;\n        _transfer(from, to, amount);\n        if (to.isContract()) {\n            (bool success,) = to.call(abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount));\n            if (!success) {\n                revert FailedToCallTokenReceivedHook();\n            }\n        }\n        return true;\n    }\n}"
			},
			"token-bank.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { TestToken } from \"./test-token.sol\";\n\ncontract TokenBank {\n\n    TestToken public token;\n    mapping(address => uint) public deposits;\n\n    constructor(TestToken _token) {\n        token = _token;\n    }\n\n    // ensure you have approve the bank to transfer your token;\n    function deposit(uint256 amount) public {\n        require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\");\n        token.transferFrom(msg.sender, address(this), amount);\n        deposits[msg.sender] += amount;\n    }\n\n    function withdraw(uint256 amount) public {\n        require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\");\n        token.transfer(msg.sender, amount);\n        deposits[msg.sender] -= amount;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"test-token.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test-token.sol\":249:437  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"test-token.sol\":249:437  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209a576092443192dabb161336e2c8b9cdf127e3ccb7982c31b95d0d701ff0f29564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209a576092443192dabb161336e2c8b9cdf127e3ccb7982c31b95d0d701ff0f29564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 JUMPI PUSH1 0x92 PREVRANDAO BALANCE SWAP3 0xDA 0xBB AND SGT CALLDATASIZE 0xE2 0xC8 0xB9 0xCD CALL 0x27 0xE3 0xCC 0xB7 SWAP9 0x2C BALANCE 0xB9 TSTORE 0xD PUSH17 0x1FF0F29564736F6C634300081A00330000 ",
							"sourceMap": "249:188:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;249:188:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209a576092443192dabb161336e2c8b9cdf127e3ccb7982c31b95d0d701ff0f29564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 JUMPI PUSH1 0x92 PREVRANDAO BALANCE SWAP3 0xDA 0xBB AND SGT CALLDATASIZE 0xE2 0xC8 0xB9 0xCD CALL 0x27 0xE3 0xCC 0xB7 SWAP9 0x2C BALANCE 0xB9 TSTORE 0xD PUSH17 0x1FF0F29564736F6C634300081A00330000 ",
							"sourceMap": "249:188:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 249,
									"end": 437,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209a576092443192dabb161336e2c8b9cdf127e3ccb7982c31b95d0d701ff0f29564736f6c634300081a0033",
									".code": [
										{
											"begin": 249,
											"end": 437,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 249,
											"end": 437,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 249,
											"end": 437,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 249,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 249,
											"end": 437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 249,
											"end": 437,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"test-token.sol",
								"token-bank-v2.sol",
								"token-bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test-token.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"test-token.sol\":{\"keccak256\":\"0x1432c29b792ada1a2ece29d926691b568c5ee819bf2545fbf985553d27f41ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9d4a47cd1f202c98a824659cfd736699fd009658c13784deb039da8e09569b\",\"dweb:/ipfs/QmZUAzsPYGNFwxFZPVnoYoRWt38SYZAyCfxwh9fhrhxudD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TestToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedToCallTokenReceivedHook",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferWithCallback",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test-token.sol\":479:1175  contract TestToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"test-token.sol\":553:634  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"test-token.sol\":616:626  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb9, 0x2a32b9ba2a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf2, 0x1515)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2801:2852   */\n  mstore\n    /* \"#utility.yul\":2774:2792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"test-token.sol\":479:1175  contract TestToken is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_18:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_19:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_26:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_27:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_21:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_31\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_31:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_32:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_30:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_7:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1555:1652   */\n  tag_39\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_40\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_43:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_34)\n    /* \"#utility.yul\":1744:2393   */\ntag_42:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_46:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_46)\ntag_48:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_49:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2655:2858   */\ntag_23:\n    /* \"test-token.sol\":479:1175  contract TestToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test-token.sol\":479:1175  contract TestToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x1a825b75\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x1a825b75\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"test-token.sol\":739:1173  function transferWithCallback(address to, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_24\n      tag_35\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_24\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_22\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"test-token.sol\":640:733  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_30\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_47\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2199:2250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2187:2189   */\n      0x20\n        /* \"#utility.yul\":2172:2190   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_20\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_24\n      tag_65\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_30\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_47\n      tag_74\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_78\n      jump\t// in\n    tag_79:\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_83:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"test-token.sol\":739:1173  function transferWithCallback(address to, uint256 amount) external returns (bool) {... */\n    tag_36:\n        /* \"test-token.sol\":815:819  bool */\n      0x00\n        /* \"test-token.sol\":846:856  msg.sender */\n      caller\n        /* \"test-token.sol\":866:893  _transfer(from, to, amount) */\n      tag_90\n        /* \"test-token.sol\":846:856  msg.sender */\n      dup2\n        /* \"test-token.sol\":882:884  to */\n      dup6\n        /* \"test-token.sol\":886:892  amount */\n      dup6\n        /* \"test-token.sol\":866:875  _transfer */\n      tag_91\n        /* \"test-token.sol\":866:893  _transfer(from, to, amount) */\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"test-token.sol\":907:920  to.isContract */\n      dup5\n      and\n        /* \"test-token.sol\":385:402  extcodesize(addr) */\n      extcodesize\n        /* \"test-token.sol\":420:428  size > 0 */\n      iszero\n        /* \"test-token.sol\":903:1146  if (to.isContract()) {... */\n      tag_86\n      jumpi\n        /* \"test-token.sol\":964:1036  abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3103:3135   */\n      dup3\n      dup2\n      and\n        /* \"test-token.sol\":964:1036  abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3085:3136   */\n      mstore\n        /* \"#utility.yul\":3152:3170   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3145:3179   */\n      dup6\n      swap1\n      mstore\n        /* \"test-token.sol\":939:951  bool success */\n      0x00\n      swap2\n        /* \"test-token.sol\":956:963  to.call */\n      swap1\n      dup7\n      and\n      swap1\n        /* \"#utility.yul\":3058:3076   */\n      0x64\n      add\n        /* \"test-token.sol\":964:1036  abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x24a756d1)\n      or\n      swap1\n      mstore\n        /* \"test-token.sol\":956:1037  to.call(abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount)) */\n      mload\n      tag_97\n      swap2\n        /* \"test-token.sol\":964:1036  abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount) */\n      swap1\n        /* \"test-token.sol\":956:1037  to.call(abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount)) */\n      tag_98\n      jump\t// in\n    tag_97:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_101\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_100)\n    tag_101:\n      0x60\n      swap2\n      pop\n    tag_100:\n      pop\n        /* \"test-token.sol\":938:1037  (bool success,) = to.call(abi.encodeWithSignature(\"tokensReceived(address,uint256)\", from, amount)) */\n      pop\n      swap1\n      pop\n        /* \"test-token.sol\":1056:1063  success */\n      dup1\n        /* \"test-token.sol\":1051:1136  if (!success) {... */\n      tag_102\n      jumpi\n        /* \"test-token.sol\":1090:1121  FailedToCallTokenReceivedHook() */\n      mload(0x40)\n      shl(0xe3, 0x03e691c7)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"test-token.sol\":1051:1136  if (!success) {... */\n    tag_102:\n      pop\n        /* \"test-token.sol\":1162:1166  true */\n      0x01\n      swap5\n        /* \"test-token.sol\":739:1173  function transferWithCallback(address to, uint256 amount) external returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n        /* \"test-token.sol\":640:733  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"test-token.sol\":709:726  _mint(to, amount) */\n      tag_113\n        /* \"test-token.sol\":715:717  to */\n      dup3\n        /* \"test-token.sol\":719:725  amount */\n      dup3\n        /* \"test-token.sol\":709:714  _mint */\n      tag_114\n        /* \"test-token.sol\":709:726  _mint(to, amount) */\n      jump\t// in\n    tag_113:\n        /* \"test-token.sol\":640:733  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3716:3748   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3698:3749   */\n      mstore\n        /* \"#utility.yul\":3765:3783   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3758:3792   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3808:3826   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3801:3835   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3671:3689   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_136\n        /* \"#utility.yul\":3496:3841   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_136\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2199:2250   */\n      mstore\n        /* \"#utility.yul\":2172:2190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2053:2256   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_174\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_179\n      swap1\n      pop\n      jump\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3716:3748   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3698:3749   */\n      mstore\n        /* \"#utility.yul\":3765:3783   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3758:3792   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3808:3826   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3801:3835   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3671:3689   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_136\n        /* \"#utility.yul\":3496:3841   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_183)\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_184\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_23:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_185:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_189:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_26:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_191:\n        /* \"#utility.yul\":783:812   */\n      tag_192\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_185\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_40:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_196:\n        /* \"#utility.yul\":1479:1508   */\n      tag_197\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_185\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_198\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_185\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_52:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      dup1\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_201:\n        /* \"#utility.yul\":2013:2042   */\n      tag_202\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_185\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2521   */\n    tag_70:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2390:2392   */\n      0x40\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2369:2376   */\n      dup6\n        /* \"#utility.yul\":2365:2388   */\n      sub\n        /* \"#utility.yul\":2361:2393   */\n      slt\n        /* \"#utility.yul\":2358:2410   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2403:2404   */\n      dup1\n        /* \"#utility.yul\":2396:2408   */\n      revert\n        /* \"#utility.yul\":2358:2410   */\n    tag_205:\n        /* \"#utility.yul\":2429:2458   */\n      tag_206\n        /* \"#utility.yul\":2448:2457   */\n      dup4\n        /* \"#utility.yul\":2429:2458   */\n      tag_185\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2419:2458   */\n      swap2\n      pop\n        /* \"#utility.yul\":2477:2515   */\n      tag_207\n        /* \"#utility.yul\":2511:2513   */\n      0x20\n        /* \"#utility.yul\":2500:2509   */\n      dup5\n        /* \"#utility.yul\":2496:2514   */\n      add\n        /* \"#utility.yul\":2477:2515   */\n      tag_185\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2467:2515   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2521   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2906   */\n    tag_78:\n        /* \"#utility.yul\":2605:2606   */\n      0x01\n        /* \"#utility.yul\":2601:2613   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2648:2660   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2669:2730   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2723:2727   */\n      0x7f\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2711:2728   */\n      and\n        /* \"#utility.yul\":2701:2728   */\n      swap2\n      pop\n        /* \"#utility.yul\":2669:2730   */\n    tag_209:\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2768:2774   */\n      dup3\n        /* \"#utility.yul\":2765:2779   */\n      lt\n        /* \"#utility.yul\":2745:2763   */\n      dup2\n        /* \"#utility.yul\":2742:2780   */\n      sub\n        /* \"#utility.yul\":2739:2900   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2822:2832   */\n      0x4e487b71\n        /* \"#utility.yul\":2817:2820   */\n      0xe0\n        /* \"#utility.yul\":2813:2833   */\n      shl\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2834   */\n      mstore\n        /* \"#utility.yul\":2857:2861   */\n      0x22\n        /* \"#utility.yul\":2854:2855   */\n      0x04\n        /* \"#utility.yul\":2847:2862   */\n      mstore\n        /* \"#utility.yul\":2885:2889   */\n      0x24\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2875:2890   */\n      revert\n        /* \"#utility.yul\":2739:2900   */\n    tag_210:\n      pop\n        /* \"#utility.yul\":2526:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3190:3491   */\n    tag_98:\n        /* \"#utility.yul\":3319:3322   */\n      0x00\n        /* \"#utility.yul\":3357:3363   */\n      dup3\n        /* \"#utility.yul\":3351:3364   */\n      mload\n        /* \"#utility.yul\":3403:3409   */\n      dup1\n        /* \"#utility.yul\":3396:3400   */\n      0x20\n        /* \"#utility.yul\":3388:3394   */\n      dup6\n        /* \"#utility.yul\":3384:3401   */\n      add\n        /* \"#utility.yul\":3379:3382   */\n      dup5\n        /* \"#utility.yul\":3373:3410   */\n      mcopy\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3429:3445   */\n      swap3\n      add\n        /* \"#utility.yul\":3454:3467   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":3429:3445   */\n      swap2\n        /* \"#utility.yul\":3190:3491   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4068   */\n    tag_178:\n        /* \"#utility.yul\":3911:3920   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3932:3942   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3929:4062   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3984:3994   */\n      0x4e487b71\n        /* \"#utility.yul\":3979:3982   */\n      0xe0\n        /* \"#utility.yul\":3975:3995   */\n      shl\n        /* \"#utility.yul\":3972:3973   */\n      0x00\n        /* \"#utility.yul\":3965:3996   */\n      mstore\n        /* \"#utility.yul\":4019:4023   */\n      0x11\n        /* \"#utility.yul\":4016:4017   */\n      0x04\n        /* \"#utility.yul\":4009:4024   */\n      mstore\n        /* \"#utility.yul\":4047:4051   */\n      0x24\n        /* \"#utility.yul\":4044:4045   */\n      0x00\n        /* \"#utility.yul\":4037:4052   */\n      revert\n\n    auxdata: 0xa26469706673582212203288f012c2b1cd004f32ae809185cd5a074715d1889adba9eef90aea8d18557c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_977": {
									"entryPoint": null,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 169,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2860:9",
										"nodeType": "YulBlock",
										"src": "0:2860:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:9",
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:9",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:9",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:9",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nativeSrc": "66:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nativeSrc": "56:31:9",
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nativeSrc": "56:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:9",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:9",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nativeSrc": "96:15:9",
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nativeSrc": "96:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:9",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:9",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nativeSrc": "120:15:9",
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nativeSrc": "120:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nativeSrc": "201:325:9",
													"nodeType": "YulBlock",
													"src": "201:325:9",
													"statements": [
														{
															"nativeSrc": "211:22:9",
															"nodeType": "YulAssignment",
															"src": "211:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:9",
																		"nodeType": "YulLiteral",
																		"src": "225:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:9"
																},
																"nativeSrc": "221:12:9",
																"nodeType": "YulFunctionCall",
																"src": "221:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																}
															]
														},
														{
															"nativeSrc": "242:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:9"
																},
																"nativeSrc": "268:12:9",
																"nodeType": "YulFunctionCall",
																"src": "268:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:9",
																	"nodeType": "YulTypedName",
																	"src": "246:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:9",
																"nodeType": "YulBlock",
																"src": "319:31:9",
																"statements": [
																	{
																		"nativeSrc": "321:27:9",
																		"nodeType": "YulAssignment",
																		"src": "321:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:9",
																					"nodeType": "YulLiteral",
																					"src": "343:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:9"
																			},
																			"nativeSrc": "331:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:9"
																},
																"nativeSrc": "292:26:9",
																"nodeType": "YulFunctionCall",
																"src": "292:26:9"
															},
															"nativeSrc": "289:61:9",
															"nodeType": "YulIf",
															"src": "289:61:9"
														},
														{
															"body": {
																"nativeSrc": "409:111:9",
																"nodeType": "YulBlock",
																"src": "409:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:9",
																					"nodeType": "YulLiteral",
																					"src": "430:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:9",
																							"nodeType": "YulLiteral",
																							"src": "437:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:9",
																							"nodeType": "YulLiteral",
																							"src": "442:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:9"
																					},
																					"nativeSrc": "433:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:9"
																			},
																			"nativeSrc": "423:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:9"
																		},
																		"nativeSrc": "423:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:9",
																					"nodeType": "YulLiteral",
																					"src": "474:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:9",
																					"nodeType": "YulLiteral",
																					"src": "477:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:9"
																			},
																			"nativeSrc": "467:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:9"
																		},
																		"nativeSrc": "467:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:9",
																					"nodeType": "YulLiteral",
																					"src": "502:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:9",
																					"nodeType": "YulLiteral",
																					"src": "505:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:9"
																			},
																			"nativeSrc": "495:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:9"
																		},
																		"nativeSrc": "495:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:9",
																				"nodeType": "YulLiteral",
																				"src": "396:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:9"
																		},
																		"nativeSrc": "385:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:9"
																},
																"nativeSrc": "362:38:9",
																"nodeType": "YulFunctionCall",
																"src": "362:38:9"
															},
															"nativeSrc": "359:161:9",
															"nodeType": "YulIf",
															"src": "359:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:9",
														"nodeType": "YulTypedName",
														"src": "181:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:9",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													}
												],
												"src": "146:380:9"
											},
											{
												"body": {
													"nativeSrc": "587:65:9",
													"nodeType": "YulBlock",
													"src": "587:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:9",
																		"nodeType": "YulLiteral",
																		"src": "604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																},
																"nativeSrc": "597:14:9",
																"nodeType": "YulFunctionCall",
																"src": "597:14:9"
															},
															"nativeSrc": "597:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:9"
														},
														{
															"nativeSrc": "620:26:9",
															"nodeType": "YulAssignment",
															"src": "620:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:9",
																		"nodeType": "YulLiteral",
																		"src": "638:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:9",
																		"nodeType": "YulLiteral",
																		"src": "641:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:9"
																},
																"nativeSrc": "628:18:9",
																"nodeType": "YulFunctionCall",
																"src": "628:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:9",
														"nodeType": "YulTypedName",
														"src": "570:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:9",
														"nodeType": "YulTypedName",
														"src": "578:4:9",
														"type": ""
													}
												],
												"src": "531:121:9"
											},
											{
												"body": {
													"nativeSrc": "738:437:9",
													"nodeType": "YulBlock",
													"src": "738:437:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:9",
																"nodeType": "YulBlock",
																"src": "771:398:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:9",
																					"nodeType": "YulLiteral",
																					"src": "792:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:9"
																			},
																			"nativeSrc": "785:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:9"
																		},
																		"nativeSrc": "785:16:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:9"
																	},
																	{
																		"nativeSrc": "814:30:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:9",
																					"nodeType": "YulLiteral",
																					"src": "836:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:9",
																					"nodeType": "YulLiteral",
																					"src": "839:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:9"
																			},
																			"nativeSrc": "826:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:9",
																				"nodeType": "YulTypedName",
																				"src": "818:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:9",
																							"nodeType": "YulLiteral",
																							"src": "890:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:9",
																									"nodeType": "YulLiteral",
																									"src": "909:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:9"
																							},
																							"nativeSrc": "893:19:9",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:9"
																					},
																					"nativeSrc": "886:27:9",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:9"
																			},
																			"nativeSrc": "876:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:9",
																				"nodeType": "YulTypedName",
																				"src": "861:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:9",
																			"nodeType": "YulBlock",
																			"src": "951:23:9",
																			"statements": [
																				{
																					"nativeSrc": "953:19:9",
																					"nodeType": "YulAssignment",
																					"src": "953:19:9",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:9",
																					"nodeType": "YulLiteral",
																					"src": "945:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:9"
																			},
																			"nativeSrc": "930:20:9",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:9"
																		},
																		"nativeSrc": "927:47:9",
																		"nodeType": "YulIf",
																		"src": "927:47:9"
																	},
																	{
																		"nativeSrc": "987:41:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:9",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:9"
																							},
																							"nativeSrc": "1014:12:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:9"
																					},
																					"nativeSrc": "1007:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:9"
																			},
																			"nativeSrc": "997:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:9"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:9",
																				"nodeType": "YulTypedName",
																				"src": "991:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:9",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:9",
																			"nodeType": "YulBlock",
																			"src": "1139:20:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:9"
																						},
																						"nativeSrc": "1141:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:9"
																					},
																					"nativeSrc": "1141:16:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:9"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:9"
																			},
																			"nativeSrc": "1086:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:9"
																		},
																		"nativeSrc": "1078:81:9",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:9",
																			"nodeType": "YulBlock",
																			"src": "1100:26:9",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:9",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:9"
																						},
																						"nativeSrc": "1111:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:9",
																			"nodeType": "YulBlock",
																			"src": "1082:3:9",
																			"statements": []
																		},
																		"src": "1078:81:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:9",
																		"nodeType": "YulLiteral",
																		"src": "759:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:9"
																},
																"nativeSrc": "751:11:9",
																"nodeType": "YulFunctionCall",
																"src": "751:11:9"
															},
															"nativeSrc": "748:421:9",
															"nodeType": "YulIf",
															"src": "748:421:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:9",
														"nodeType": "YulTypedName",
														"src": "710:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:9",
														"nodeType": "YulTypedName",
														"src": "717:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:9",
														"nodeType": "YulTypedName",
														"src": "722:10:9",
														"type": ""
													}
												],
												"src": "657:518:9"
											},
											{
												"body": {
													"nativeSrc": "1265:81:9",
													"nodeType": "YulBlock",
													"src": "1265:81:9",
													"statements": [
														{
															"nativeSrc": "1275:65:9",
															"nodeType": "YulAssignment",
															"src": "1275:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:9"
																								},
																								"nativeSrc": "1304:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:9",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:9"
																								},
																								"nativeSrc": "1317:6:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:9"
																						},
																						"nativeSrc": "1300:24:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:9"
																				},
																				"nativeSrc": "1296:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:9"
																		},
																		"nativeSrc": "1286:40:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:9"
																		},
																		"nativeSrc": "1328:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:9"
																},
																"nativeSrc": "1283:57:9",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:9",
														"nodeType": "YulTypedName",
														"src": "1242:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:9",
														"nodeType": "YulTypedName",
														"src": "1248:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:9",
														"nodeType": "YulTypedName",
														"src": "1256:4:9",
														"type": ""
													}
												],
												"src": "1180:166:9"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:9",
													"nodeType": "YulBlock",
													"src": "1447:1203:9",
													"statements": [
														{
															"nativeSrc": "1457:24:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:9"
																},
																"nativeSrc": "1471:10:9",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:9",
																"nodeType": "YulBlock",
																"src": "1524:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:9"
																			},
																			"nativeSrc": "1526:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:9"
																		},
																		"nativeSrc": "1526:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:9"
																				},
																				"nativeSrc": "1508:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:9"
																		},
																		"nativeSrc": "1504:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:9"
																},
																"nativeSrc": "1493:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:9"
															},
															"nativeSrc": "1490:56:9",
															"nodeType": "YulIf",
															"src": "1490:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:9"
																				},
																				"nativeSrc": "1631:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:9",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:9"
																		},
																		"nativeSrc": "1605:38:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:9"
																},
																"nativeSrc": "1555:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:9"
															},
															"nativeSrc": "1555:97:9",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:9"
														},
														{
															"nativeSrc": "1661:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:9",
																"nodeType": "YulLiteral",
																"src": "1678:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:9",
															"nodeType": "YulAssignment",
															"src": "1688:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:9",
																"nodeType": "YulLiteral",
																"src": "1701:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:9",
																		"nodeType": "YulBlock",
																		"src": "1751:642:9",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:9",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:9"
																							},
																							"nativeSrc": "1792:7:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:9"
																					},
																					"nativeSrc": "1780:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:9",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:9",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:9"
																					},
																					"nativeSrc": "1827:35:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:9",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:9",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:9",
																					"nodeType": "YulBlock",
																					"src": "1955:165:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:9"
																												},
																												"nativeSrc": "1994:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:9"
																										},
																										"nativeSrc": "1988:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:9"
																								},
																								"nativeSrc": "1973:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:9"
																							},
																							"nativeSrc": "1973:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:9"
																						},
																						{
																							"nativeSrc": "2032:24:9",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:9",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:9"
																								},
																								"nativeSrc": "2042:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:9",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:9",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:9"
																								},
																								"nativeSrc": "2086:20:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:9"
																					},
																					"nativeSrc": "1906:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:9"
																				},
																				"nativeSrc": "1898:222:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:9",
																					"nodeType": "YulBlock",
																					"src": "1921:21:9",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:9",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:9",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:9"
																								},
																								"nativeSrc": "1928:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:9",
																					"nodeType": "YulBlock",
																					"src": "1902:3:9",
																					"statements": []
																				},
																				"src": "1898:222:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:9",
																					"nodeType": "YulBlock",
																					"src": "2168:166:9",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:9"
																										},
																										"nativeSrc": "2209:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:9"
																								},
																								"nativeSrc": "2203:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:9",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:9",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:9",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:9",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:9"
																																		},
																																		"nativeSrc": "2288:14:9",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:9",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:9"
																																},
																																"nativeSrc": "2284:24:9",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:9",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:9",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:9"
																																},
																																"nativeSrc": "2310:6:9",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:9",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:9"
																														},
																														"nativeSrc": "2280:37:9",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:9"
																												},
																												"nativeSrc": "2276:42:9",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:9"
																										},
																										"nativeSrc": "2261:58:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:9"
																								},
																								"nativeSrc": "2246:74:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:9"
																							},
																							"nativeSrc": "2246:74:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:9"
																					},
																					"nativeSrc": "2136:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:9"
																				},
																				"nativeSrc": "2133:201:9",
																				"nodeType": "YulIf",
																				"src": "2133:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:9",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:9"
																									},
																									"nativeSrc": "2364:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:9",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:9"
																							},
																							"nativeSrc": "2360:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:9"
																					},
																					"nativeSrc": "2347:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:9"
																				},
																				"nativeSrc": "2347:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:9"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:9",
																	"nodeType": "YulCase",
																	"src": "1744:649:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:9",
																		"nodeType": "YulBlock",
																		"src": "2410:234:9",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:9",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:9",
																					"nodeType": "YulBlock",
																					"src": "2473:67:9",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:9",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:9"
																										},
																										"nativeSrc": "2506:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:9"
																								},
																								"nativeSrc": "2500:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:9"
																				},
																				"nativeSrc": "2451:89:9",
																				"nodeType": "YulIf",
																				"src": "2451:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:9"
																							},
																							"nativeSrc": "2566:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:9"
																					},
																					"nativeSrc": "2553:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:9"
																				},
																				"nativeSrc": "2553:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:9"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:9",
																	"nodeType": "YulCase",
																	"src": "2402:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:9"
																},
																"nativeSrc": "1721:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:9"
															},
															"nativeSrc": "1714:930:9",
															"nodeType": "YulSwitch",
															"src": "1714:930:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:9",
														"nodeType": "YulTypedName",
														"src": "1432:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:9",
														"nodeType": "YulTypedName",
														"src": "1438:3:9",
														"type": ""
													}
												],
												"src": "1351:1299:9"
											},
											{
												"body": {
													"nativeSrc": "2756:102:9",
													"nodeType": "YulBlock",
													"src": "2756:102:9",
													"statements": [
														{
															"nativeSrc": "2766:26:9",
															"nodeType": "YulAssignment",
															"src": "2766:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2774:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:9"
																},
																"nativeSrc": "2774:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2774:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2766:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2766:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2808:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2823:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2839:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2839:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2844:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2844:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2835:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:9"
																						},
																						"nativeSrc": "2835:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2835:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2848:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2848:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2831:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:9"
																				},
																				"nativeSrc": "2831:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2819:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:9"
																		},
																		"nativeSrc": "2819:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:9"
																},
																"nativeSrc": "2801:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2801:51:9"
															},
															"nativeSrc": "2801:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2801:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2655:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:9",
														"nodeType": "YulTypedName",
														"src": "2725:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2736:6:9",
														"nodeType": "YulTypedName",
														"src": "2736:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2747:4:9",
														"nodeType": "YulTypedName",
														"src": "2747:4:9",
														"type": ""
													}
												],
												"src": "2655:203:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5033604051806040016040528060098152602001682a32b9ba2a37b5b2b760b91b81525060405180604001604052806002815260200161151560f21b815250816003908161005d9190610192565b50600461006a8282610192565b5050506001600160a01b03811661009a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100a3816100a9565b5061024c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061012257607f821691505b60208210810361014057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561018d57805f5260205f20601f840160051c8101602085101561016b5750805b601f840160051c820191505b8181101561018a575f8155600101610177565b50505b505050565b81516001600160401b038111156101ab576101ab6100fa565b6101bf816101b9845461010e565b84610146565b6020601f8211600181146101f1575f83156101da5750848201515b5f19600385901b1c1916600184901b17845561018a565b5f84815260208120601f198516915b828110156102205787850151825560209485019460019092019101610200565b508482101561023d57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b610999806102595f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101d1578063a9059cbb146101d9578063dd62ed3e146101ec578063f2fde38b14610224575f80fd5b806370a0823114610186578063715018a6146101ae5780638da5cb5b146101b6575f80fd5b80631a825b75116100c35780631a825b751461013c57806323b872dd1461014f578063313ce5671461016257806340c10f1914610171575f80fd5b806306fdde03146100e9578063095ea7b31461010757806318160ddd1461012a575b5f80fd5b6100f1610237565b6040516100fe91906107f3565b60405180910390f35b61011a610115366004610843565b6102c7565b60405190151581526020016100fe565b6002545b6040519081526020016100fe565b61011a61014a366004610843565b6102e0565b61011a61015d36600461086b565b6103c0565b604051601281526020016100fe565b61018461017f366004610843565b6103d8565b005b61012e6101943660046108a5565b6001600160a01b03165f9081526020819052604090205490565b6101846103ee565b6005546040516001600160a01b0390911681526020016100fe565b6100f1610401565b61011a6101e7366004610843565b610410565b61012e6101fa3660046108c5565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101846102323660046108a5565b61041d565b606060038054610246906108f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610272906108f6565b80156102bd5780601f10610294576101008083540402835291602001916102bd565b820191905f5260205f20905b8154815290600101906020018083116102a057829003601f168201915b5050505050905090565b5f336102d481858561045f565b60019150505b92915050565b5f336102ed818585610471565b6001600160a01b0384163b156102d4576040516001600160a01b038281166024830152604482018590525f919086169060640160408051601f198184030181529181526020820180516001600160e01b03166324a756d160e01b17905251610355919061092e565b5f604051808303815f865af19150503d805f811461038e576040519150601f19603f3d011682016040523d82523d5f602084013e610393565b606091505b50509050806103b5576040516303e691c760e31b815260040160405180910390fd5b506001949350505050565b5f336103cd8582856104ce565b6103b5858585610471565b6103e0610549565b6103ea8282610576565b5050565b6103f6610549565b6103ff5f6105aa565b565b606060048054610246906108f6565b5f336102d4818585610471565b610425610549565b6001600160a01b03811661045357604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61045c816105aa565b50565b61046c83838360016105fb565b505050565b6001600160a01b03831661049a57604051634b637e8f60e11b81525f600482015260240161044a565b6001600160a01b0382166104c35760405163ec442f0560e01b81525f600482015260240161044a565b61046c8383836106cd565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610543578181101561053557604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161044a565b61054384848484035f6105fb565b50505050565b6005546001600160a01b031633146103ff5760405163118cdaa760e01b815233600482015260240161044a565b6001600160a01b03821661059f5760405163ec442f0560e01b81525f600482015260240161044a565b6103ea5f83836106cd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166106245760405163e602df0560e01b81525f600482015260240161044a565b6001600160a01b03831661064d57604051634a1406b160e11b81525f600482015260240161044a565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561054357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106bf91815260200190565b60405180910390a350505050565b6001600160a01b0383166106f7578060025f8282546106ec9190610944565b909155506107679050565b6001600160a01b0383165f90815260208190526040902054818110156107495760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161044a565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610783576002805482900390556107a1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107e691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461083e575f80fd5b919050565b5f8060408385031215610854575f80fd5b61085d83610828565b946020939093013593505050565b5f805f6060848603121561087d575f80fd5b61088684610828565b925061089460208501610828565b929592945050506040919091013590565b5f602082840312156108b5575f80fd5b6108be82610828565b9392505050565b5f80604083850312156108d6575f80fd5b6108df83610828565b91506108ed60208401610828565b90509250929050565b600181811c9082168061090a57607f821691505b60208210810361092857634e487b7160e01b5f52602260045260245ffd5b50919050565b5f82518060208501845e5f920191825250919050565b808201808211156102da57634e487b7160e01b5f52601160045260245ffdfea26469706673582212203288f012c2b1cd004f32ae809185cd5a074715d1889adba9eef90aea8d18557c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2A32B9BA2A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1515 PUSH1 0xF2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x5D SWAP2 SWAP1 PUSH2 0x192 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x6A DUP3 DUP3 PUSH2 0x192 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3 DUP2 PUSH2 0xA9 JUMP JUMPDEST POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x122 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x140 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18D JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x16B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x177 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AB JUMPI PUSH2 0x1AB PUSH2 0xFA JUMP JUMPDEST PUSH2 0x1BF DUP2 PUSH2 0x1B9 DUP5 SLOAD PUSH2 0x10E JUMP JUMPDEST DUP5 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F1 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1DA JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x18A JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x220 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x200 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x23D JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x999 DUP1 PUSH2 0x259 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A825B75 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x1A825B75 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x11A PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x401 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2ED DUP2 DUP6 DUP6 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x24A756D1 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x92E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x393 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E691C7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3CD DUP6 DUP3 DUP6 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x3B5 DUP6 DUP6 DUP6 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3EA DUP3 DUP3 PUSH2 0x576 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3FF PUSH0 PUSH2 0x5AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x5AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x5FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x543 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44A JUMP JUMPDEST PUSH2 0x543 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x5FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH2 0x3EA PUSH0 DUP4 DUP4 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x543 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6BF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x767 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x783 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x83E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x85D DUP4 PUSH2 0x828 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x886 DUP5 PUSH2 0x828 JUMP JUMPDEST SWAP3 POP PUSH2 0x894 PUSH1 0x20 DUP6 ADD PUSH2 0x828 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8BE DUP3 PUSH2 0x828 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8DF DUP4 PUSH2 0x828 JUMP JUMPDEST SWAP2 POP PUSH2 0x8ED PUSH1 0x20 DUP5 ADD PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x90A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x928 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN DUP9 CREATE SLT 0xC2 0xB1 0xCD STOP 0x4F ORIGIN 0xAE DUP1 SWAP2 DUP6 0xCD GAS SMOD SELFBALANCE ISZERO 0xD1 DUP9 SWAP11 0xDB 0xA9 0xEE 0xF9 EXP 0xEA DUP14 XOR SSTORE PUSH29 0x64736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "479:696:6:-:0;;;553:81;;;;;;;;;;616:10;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2801:51:9;2774:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;479:696:6;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:9;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:9;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:9;;;2500:26;2451:89;-1:-1:-1;;1308:1:9;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:9;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:9;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:9;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:9:o;2655:203::-;479:696:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1119,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1531,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1353,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1398,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1230,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1450,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1137,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1741,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 711,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_992": {
									"entryPoint": 984,
									"id": 992,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 567,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1006,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1025,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 960,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1053,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferWithCallback_1039": {
									"entryPoint": 736,
									"id": 1039,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 1040,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4070:9",
										"nodeType": "YulBlock",
										"src": "0:4070:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:9",
													"nodeType": "YulBlock",
													"src": "135:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:9",
																		"nodeType": "YulLiteral",
																		"src": "163:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:9"
																},
																"nativeSrc": "145:21:9",
																"nodeType": "YulFunctionCall",
																"src": "145:21:9"
															},
															"nativeSrc": "145:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:9"
														},
														{
															"nativeSrc": "175:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:9"
																},
																"nativeSrc": "189:13:9",
																"nodeType": "YulFunctionCall",
																"src": "189:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:9",
																	"nodeType": "YulTypedName",
																	"src": "179:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:9",
																				"nodeType": "YulLiteral",
																				"src": "233:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:9"
																		},
																		"nativeSrc": "218:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																},
																"nativeSrc": "211:34:9",
																"nodeType": "YulFunctionCall",
																"src": "211:34:9"
															},
															"nativeSrc": "211:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:9",
																				"nodeType": "YulLiteral",
																				"src": "275:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:9"
																		},
																		"nativeSrc": "260:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:9",
																				"nodeType": "YulLiteral",
																				"src": "292:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:9"
																		},
																		"nativeSrc": "280:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:9"
																},
																"nativeSrc": "254:50:9",
																"nodeType": "YulFunctionCall",
																"src": "254:50:9"
															},
															"nativeSrc": "254:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:9"
																				},
																				"nativeSrc": "324:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:9",
																				"nodeType": "YulLiteral",
																				"src": "348:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:9"
																		},
																		"nativeSrc": "320:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:9",
																		"nodeType": "YulLiteral",
																		"src": "353:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:9"
																},
																"nativeSrc": "313:42:9",
																"nodeType": "YulFunctionCall",
																"src": "313:42:9"
															},
															"nativeSrc": "313:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:9"
														},
														{
															"nativeSrc": "364:62:9",
															"nodeType": "YulAssignment",
															"src": "364:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:9",
																								"nodeType": "YulLiteral",
																								"src": "407:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:9"
																						},
																						"nativeSrc": "395:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:9",
																								"nodeType": "YulLiteral",
																								"src": "416:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:9"
																						},
																						"nativeSrc": "412:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:9"
																				},
																				"nativeSrc": "391:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:9"
																		},
																		"nativeSrc": "376:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:9",
																		"nodeType": "YulLiteral",
																		"src": "423:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:9"
																},
																"nativeSrc": "372:54:9",
																"nodeType": "YulFunctionCall",
																"src": "372:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:9",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:9",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:9",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:418:9"
											},
											{
												"body": {
													"nativeSrc": "486:124:9",
													"nodeType": "YulBlock",
													"src": "486:124:9",
													"statements": [
														{
															"nativeSrc": "496:29:9",
															"nodeType": "YulAssignment",
															"src": "496:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:9"
																},
																"nativeSrc": "505:20:9",
																"nodeType": "YulFunctionCall",
																"src": "505:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:9",
																"nodeType": "YulBlock",
																"src": "588:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:9",
																					"nodeType": "YulLiteral",
																					"src": "597:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:9",
																					"nodeType": "YulLiteral",
																					"src": "600:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:9"
																			},
																			"nativeSrc": "590:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:9"
																		},
																		"nativeSrc": "590:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:9",
																										"nodeType": "YulLiteral",
																										"src": "573:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:9",
																										"nodeType": "YulLiteral",
																										"src": "578:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:9"
																								},
																								"nativeSrc": "569:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:9",
																								"nodeType": "YulLiteral",
																								"src": "582:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:9"
																						},
																						"nativeSrc": "565:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:9"
																				},
																				"nativeSrc": "554:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:9"
																		},
																		"nativeSrc": "544:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:9"
																},
																"nativeSrc": "537:50:9",
																"nodeType": "YulFunctionCall",
																"src": "537:50:9"
															},
															"nativeSrc": "534:70:9",
															"nodeType": "YulIf",
															"src": "534:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:9",
														"nodeType": "YulTypedName",
														"src": "465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:9",
														"nodeType": "YulTypedName",
														"src": "476:5:9",
														"type": ""
													}
												],
												"src": "437:173:9"
											},
											{
												"body": {
													"nativeSrc": "702:213:9",
													"nodeType": "YulBlock",
													"src": "702:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:9",
																"nodeType": "YulBlock",
																"src": "748:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:9",
																					"nodeType": "YulLiteral",
																					"src": "757:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:9",
																					"nodeType": "YulLiteral",
																					"src": "760:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:9"
																			},
																			"nativeSrc": "750:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:9"
																		},
																		"nativeSrc": "750:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:9"
																		},
																		"nativeSrc": "719:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:9",
																		"nodeType": "YulLiteral",
																		"src": "744:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:9"
																},
																"nativeSrc": "715:32:9",
																"nodeType": "YulFunctionCall",
																"src": "715:32:9"
															},
															"nativeSrc": "712:52:9",
															"nodeType": "YulIf",
															"src": "712:52:9"
														},
														{
															"nativeSrc": "773:39:9",
															"nodeType": "YulAssignment",
															"src": "773:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:9"
																},
																"nativeSrc": "783:29:9",
																"nodeType": "YulFunctionCall",
																"src": "783:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:9"
																}
															]
														},
														{
															"nativeSrc": "821:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:9",
																"nodeType": "YulLiteral",
																"src": "834:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:9",
																	"nodeType": "YulTypedName",
																	"src": "825:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:9",
															"nodeType": "YulAssignment",
															"src": "844:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:9",
																				"nodeType": "YulLiteral",
																				"src": "881:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:9"
																		},
																		"nativeSrc": "866:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:9"
																},
																"nativeSrc": "853:32:9",
																"nodeType": "YulFunctionCall",
																"src": "853:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:9"
																}
															]
														},
														{
															"nativeSrc": "894:15:9",
															"nodeType": "YulAssignment",
															"src": "894:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:9",
																"nodeType": "YulIdentifier",
																"src": "904:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:9",
														"nodeType": "YulTypedName",
														"src": "660:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:9",
														"nodeType": "YulTypedName",
														"src": "671:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:9",
														"nodeType": "YulTypedName",
														"src": "683:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:9",
														"nodeType": "YulTypedName",
														"src": "691:6:9",
														"type": ""
													}
												],
												"src": "615:300:9"
											},
											{
												"body": {
													"nativeSrc": "1015:92:9",
													"nodeType": "YulBlock",
													"src": "1015:92:9",
													"statements": [
														{
															"nativeSrc": "1025:26:9",
															"nodeType": "YulAssignment",
															"src": "1025:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:9"
																},
																"nativeSrc": "1033:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:9"
																				},
																				"nativeSrc": "1085:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:9"
																		},
																		"nativeSrc": "1078:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:9"
																},
																"nativeSrc": "1060:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:9"
															},
															"nativeSrc": "1060:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:9",
														"nodeType": "YulTypedName",
														"src": "984:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:9",
														"nodeType": "YulTypedName",
														"src": "995:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:9",
														"nodeType": "YulTypedName",
														"src": "1006:4:9",
														"type": ""
													}
												],
												"src": "920:187:9"
											},
											{
												"body": {
													"nativeSrc": "1213:76:9",
													"nodeType": "YulBlock",
													"src": "1213:76:9",
													"statements": [
														{
															"nativeSrc": "1223:26:9",
															"nodeType": "YulAssignment",
															"src": "1223:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:9"
																},
																"nativeSrc": "1231:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:9"
																},
																"nativeSrc": "1258:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:9"
															},
															"nativeSrc": "1258:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:9",
														"nodeType": "YulTypedName",
														"src": "1182:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:9",
														"nodeType": "YulTypedName",
														"src": "1193:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:9",
														"nodeType": "YulTypedName",
														"src": "1204:4:9",
														"type": ""
													}
												],
												"src": "1112:177:9"
											},
											{
												"body": {
													"nativeSrc": "1398:270:9",
													"nodeType": "YulBlock",
													"src": "1398:270:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:9",
																"nodeType": "YulBlock",
																"src": "1444:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:9"
																			},
																			"nativeSrc": "1446:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:9"
																		},
																		"nativeSrc": "1446:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:9"
																		},
																		"nativeSrc": "1415:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:9"
																},
																"nativeSrc": "1411:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:9"
															},
															"nativeSrc": "1408:52:9",
															"nodeType": "YulIf",
															"src": "1408:52:9"
														},
														{
															"nativeSrc": "1469:39:9",
															"nodeType": "YulAssignment",
															"src": "1469:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:9"
																},
																"nativeSrc": "1479:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:9"
																}
															]
														},
														{
															"nativeSrc": "1517:48:9",
															"nodeType": "YulAssignment",
															"src": "1517:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:9"
																		},
																		"nativeSrc": "1546:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:9"
																},
																"nativeSrc": "1527:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:9"
																}
															]
														},
														{
															"nativeSrc": "1574:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:9",
																"nodeType": "YulLiteral",
																"src": "1587:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:9",
															"nodeType": "YulAssignment",
															"src": "1597:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:9"
																		},
																		"nativeSrc": "1619:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:9"
																},
																"nativeSrc": "1606:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:9"
																}
															]
														},
														{
															"nativeSrc": "1647:15:9",
															"nodeType": "YulAssignment",
															"src": "1647:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:9",
																"nodeType": "YulIdentifier",
																"src": "1657:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:9",
														"nodeType": "YulTypedName",
														"src": "1348:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:9",
														"nodeType": "YulTypedName",
														"src": "1359:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:9",
														"nodeType": "YulTypedName",
														"src": "1371:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:9",
														"nodeType": "YulTypedName",
														"src": "1379:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:9",
														"nodeType": "YulTypedName",
														"src": "1387:6:9",
														"type": ""
													}
												],
												"src": "1294:374:9"
											},
											{
												"body": {
													"nativeSrc": "1770:87:9",
													"nodeType": "YulBlock",
													"src": "1770:87:9",
													"statements": [
														{
															"nativeSrc": "1780:26:9",
															"nodeType": "YulAssignment",
															"src": "1780:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:9"
																},
																"nativeSrc": "1788:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:9"
																		},
																		"nativeSrc": "1833:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:9"
																},
																"nativeSrc": "1815:36:9",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:9"
															},
															"nativeSrc": "1815:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:9",
														"nodeType": "YulTypedName",
														"src": "1739:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:9",
														"nodeType": "YulTypedName",
														"src": "1750:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:9",
														"nodeType": "YulTypedName",
														"src": "1761:4:9",
														"type": ""
													}
												],
												"src": "1673:184:9"
											},
											{
												"body": {
													"nativeSrc": "1932:116:9",
													"nodeType": "YulBlock",
													"src": "1932:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:9",
																"nodeType": "YulBlock",
																"src": "1978:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:9"
																			},
																			"nativeSrc": "1980:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:9"
																		},
																		"nativeSrc": "1980:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:9"
																		},
																		"nativeSrc": "1949:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:9"
																},
																"nativeSrc": "1945:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:9"
															},
															"nativeSrc": "1942:52:9",
															"nodeType": "YulIf",
															"src": "1942:52:9"
														},
														{
															"nativeSrc": "2003:39:9",
															"nodeType": "YulAssignment",
															"src": "2003:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:9"
																},
																"nativeSrc": "2013:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:9",
														"nodeType": "YulTypedName",
														"src": "1898:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:9",
														"nodeType": "YulTypedName",
														"src": "1909:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:9",
														"nodeType": "YulTypedName",
														"src": "1921:6:9",
														"type": ""
													}
												],
												"src": "1862:186:9"
											},
											{
												"body": {
													"nativeSrc": "2154:102:9",
													"nodeType": "YulBlock",
													"src": "2154:102:9",
													"statements": [
														{
															"nativeSrc": "2164:26:9",
															"nodeType": "YulAssignment",
															"src": "2164:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2176:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2187:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2187:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:9"
																},
																"nativeSrc": "2172:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2172:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2164:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2206:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2221:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2237:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2237:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2242:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2242:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2233:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2233:3:9"
																						},
																						"nativeSrc": "2233:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2233:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2246:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2246:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2229:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:9"
																				},
																				"nativeSrc": "2229:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2217:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:9"
																		},
																		"nativeSrc": "2217:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2199:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:9"
																},
																"nativeSrc": "2199:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2199:51:9"
															},
															"nativeSrc": "2199:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2199:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2053:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2123:9:9",
														"nodeType": "YulTypedName",
														"src": "2123:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2134:6:9",
														"nodeType": "YulTypedName",
														"src": "2134:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2145:4:9",
														"nodeType": "YulTypedName",
														"src": "2145:4:9",
														"type": ""
													}
												],
												"src": "2053:203:9"
											},
											{
												"body": {
													"nativeSrc": "2348:173:9",
													"nodeType": "YulBlock",
													"src": "2348:173:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2394:16:9",
																"nodeType": "YulBlock",
																"src": "2394:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2403:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2406:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2406:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2396:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:9"
																			},
																			"nativeSrc": "2396:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:12:9"
																		},
																		"nativeSrc": "2396:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2369:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2369:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2365:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:9"
																		},
																		"nativeSrc": "2365:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2390:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2361:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:9"
																},
																"nativeSrc": "2361:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2361:32:9"
															},
															"nativeSrc": "2358:52:9",
															"nodeType": "YulIf",
															"src": "2358:52:9"
														},
														{
															"nativeSrc": "2419:39:9",
															"nodeType": "YulAssignment",
															"src": "2419:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2448:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2448:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2429:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2429:18:9"
																},
																"nativeSrc": "2429:29:9",
																"nodeType": "YulFunctionCall",
																"src": "2429:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:9"
																}
															]
														},
														{
															"nativeSrc": "2467:48:9",
															"nodeType": "YulAssignment",
															"src": "2467:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2500:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2500:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2511:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2511:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2496:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:9"
																		},
																		"nativeSrc": "2496:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2477:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2477:18:9"
																},
																"nativeSrc": "2477:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2477:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2467:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2261:260:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2306:9:9",
														"nodeType": "YulTypedName",
														"src": "2306:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2317:7:9",
														"nodeType": "YulTypedName",
														"src": "2317:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2329:6:9",
														"nodeType": "YulTypedName",
														"src": "2329:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2337:6:9",
														"nodeType": "YulTypedName",
														"src": "2337:6:9",
														"type": ""
													}
												],
												"src": "2261:260:9"
											},
											{
												"body": {
													"nativeSrc": "2581:325:9",
													"nodeType": "YulBlock",
													"src": "2581:325:9",
													"statements": [
														{
															"nativeSrc": "2591:22:9",
															"nodeType": "YulAssignment",
															"src": "2591:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2605:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2605:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2608:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2608:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2601:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2601:3:9"
																},
																"nativeSrc": "2601:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2601:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2591:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:9"
																}
															]
														},
														{
															"nativeSrc": "2622:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2622:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2652:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2652:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2658:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2658:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2648:3:9"
																},
																"nativeSrc": "2648:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2648:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2626:18:9",
																	"nodeType": "YulTypedName",
																	"src": "2626:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2699:31:9",
																"nodeType": "YulBlock",
																"src": "2699:31:9",
																"statements": [
																	{
																		"nativeSrc": "2701:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2701:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2715:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2715:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2723:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2723:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2711:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:9"
																			},
																			"nativeSrc": "2711:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2711:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2701:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2679:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2679:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2672:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:9"
																},
																"nativeSrc": "2672:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2672:26:9"
															},
															"nativeSrc": "2669:61:9",
															"nodeType": "YulIf",
															"src": "2669:61:9"
														},
														{
															"body": {
																"nativeSrc": "2789:111:9",
																"nodeType": "YulBlock",
																"src": "2789:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2810:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2817:3:9",
																							"nodeType": "YulLiteral",
																							"src": "2817:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2822:10:9",
																							"nodeType": "YulLiteral",
																							"src": "2822:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2813:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2813:3:9"
																					},
																					"nativeSrc": "2813:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2803:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2803:6:9"
																			},
																			"nativeSrc": "2803:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2803:31:9"
																		},
																		"nativeSrc": "2803:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2803:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2854:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2854:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2857:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2857:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2847:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:9"
																			},
																			"nativeSrc": "2847:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:15:9"
																		},
																		"nativeSrc": "2847:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2882:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2885:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2885:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2875:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:9"
																			},
																			"nativeSrc": "2875:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2875:15:9"
																		},
																		"nativeSrc": "2875:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2745:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2745:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2776:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2765:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2765:2:9"
																		},
																		"nativeSrc": "2765:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2765:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2742:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2742:2:9"
																},
																"nativeSrc": "2742:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2742:38:9"
															},
															"nativeSrc": "2739:161:9",
															"nodeType": "YulIf",
															"src": "2739:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2526:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2561:4:9",
														"nodeType": "YulTypedName",
														"src": "2561:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2570:6:9",
														"nodeType": "YulTypedName",
														"src": "2570:6:9",
														"type": ""
													}
												],
												"src": "2526:380:9"
											},
											{
												"body": {
													"nativeSrc": "3040:145:9",
													"nodeType": "YulBlock",
													"src": "3040:145:9",
													"statements": [
														{
															"nativeSrc": "3050:26:9",
															"nodeType": "YulAssignment",
															"src": "3050:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3062:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3062:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3073:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3073:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3058:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:9"
																},
																"nativeSrc": "3058:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3058:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3050:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3050:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3092:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3107:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3107:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3123:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3123:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3128:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3128:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3119:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3119:3:9"
																						},
																						"nativeSrc": "3119:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3119:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3132:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3132:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3115:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3115:3:9"
																				},
																				"nativeSrc": "3115:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3115:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3103:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:9"
																		},
																		"nativeSrc": "3103:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3103:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3085:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:9"
																},
																"nativeSrc": "3085:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3085:51:9"
															},
															"nativeSrc": "3085:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3085:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3156:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3156:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3167:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3167:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3152:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3152:3:9"
																		},
																		"nativeSrc": "3152:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3152:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3172:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3145:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:9"
																},
																"nativeSrc": "3145:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3145:34:9"
															},
															"nativeSrc": "3145:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3145:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2911:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3001:9:9",
														"nodeType": "YulTypedName",
														"src": "3001:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3012:6:9",
														"nodeType": "YulTypedName",
														"src": "3012:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3020:6:9",
														"nodeType": "YulTypedName",
														"src": "3020:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3031:4:9",
														"nodeType": "YulTypedName",
														"src": "3031:4:9",
														"type": ""
													}
												],
												"src": "2911:274:9"
											},
											{
												"body": {
													"nativeSrc": "3327:164:9",
													"nodeType": "YulBlock",
													"src": "3327:164:9",
													"statements": [
														{
															"nativeSrc": "3337:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3337:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3357:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3357:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3351:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3351:5:9"
																},
																"nativeSrc": "3351:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3351:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3341:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3341:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3379:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3379:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3388:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3388:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3396:4:9",
																				"nodeType": "YulLiteral",
																				"src": "3396:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3384:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:9"
																		},
																		"nativeSrc": "3384:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3384:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3403:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3403:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3373:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3373:5:9"
																},
																"nativeSrc": "3373:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3373:37:9"
															},
															"nativeSrc": "3373:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3373:37:9"
														},
														{
															"nativeSrc": "3419:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3419:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3433:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3433:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3438:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3429:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3429:3:9"
																},
																"nativeSrc": "3429:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3429:16:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3423:2:9",
																	"nodeType": "YulTypedName",
																	"src": "3423:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3461:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "3461:2:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3465:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3465:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3454:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:9"
																},
																"nativeSrc": "3454:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3454:13:9"
															},
															"nativeSrc": "3454:13:9",
															"nodeType": "YulExpressionStatement",
															"src": "3454:13:9"
														},
														{
															"nativeSrc": "3476:9:9",
															"nodeType": "YulAssignment",
															"src": "3476:9:9",
															"value": {
																"name": "_1",
																"nativeSrc": "3483:2:9",
																"nodeType": "YulIdentifier",
																"src": "3483:2:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3476:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3190:301:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3303:3:9",
														"nodeType": "YulTypedName",
														"src": "3303:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:9",
														"nodeType": "YulTypedName",
														"src": "3308:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3319:3:9",
														"nodeType": "YulTypedName",
														"src": "3319:3:9",
														"type": ""
													}
												],
												"src": "3190:301:9"
											},
											{
												"body": {
													"nativeSrc": "3653:188:9",
													"nodeType": "YulBlock",
													"src": "3653:188:9",
													"statements": [
														{
															"nativeSrc": "3663:26:9",
															"nodeType": "YulAssignment",
															"src": "3663:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3675:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3675:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3686:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3686:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3671:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3671:3:9"
																},
																"nativeSrc": "3671:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3671:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3663:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3663:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3705:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3705:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3720:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3720:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3736:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3736:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3741:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3741:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3732:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3732:3:9"
																						},
																						"nativeSrc": "3732:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3732:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3745:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3745:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3728:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3728:3:9"
																				},
																				"nativeSrc": "3728:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3728:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3716:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:9"
																		},
																		"nativeSrc": "3716:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3698:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:9"
																},
																"nativeSrc": "3698:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3698:51:9"
															},
															"nativeSrc": "3698:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3698:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3769:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3769:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3780:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3780:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3765:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3765:3:9"
																		},
																		"nativeSrc": "3765:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3785:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3785:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3758:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:9"
																},
																"nativeSrc": "3758:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3758:34:9"
															},
															"nativeSrc": "3758:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3758:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3812:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3823:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3823:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3801:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3801:6:9"
																},
																"nativeSrc": "3801:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3801:34:9"
															},
															"nativeSrc": "3801:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3801:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3496:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3606:9:9",
														"nodeType": "YulTypedName",
														"src": "3606:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3617:6:9",
														"nodeType": "YulTypedName",
														"src": "3617:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3625:6:9",
														"nodeType": "YulTypedName",
														"src": "3625:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3633:6:9",
														"nodeType": "YulTypedName",
														"src": "3633:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3644:4:9",
														"nodeType": "YulTypedName",
														"src": "3644:4:9",
														"type": ""
													}
												],
												"src": "3496:345:9"
											},
											{
												"body": {
													"nativeSrc": "3894:174:9",
													"nodeType": "YulBlock",
													"src": "3894:174:9",
													"statements": [
														{
															"nativeSrc": "3904:16:9",
															"nodeType": "YulAssignment",
															"src": "3904:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3915:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3915:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3918:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3918:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:9"
																},
																"nativeSrc": "3911:9:9",
																"nodeType": "YulFunctionCall",
																"src": "3911:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3904:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3951:111:9",
																"nodeType": "YulBlock",
																"src": "3951:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3972:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3972:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3979:3:9",
																							"nodeType": "YulLiteral",
																							"src": "3979:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3984:10:9",
																							"nodeType": "YulLiteral",
																							"src": "3984:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3975:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3975:3:9"
																					},
																					"nativeSrc": "3975:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3975:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3965:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3965:6:9"
																			},
																			"nativeSrc": "3965:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3965:31:9"
																		},
																		"nativeSrc": "3965:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3965:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4016:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4016:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4019:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4019:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4009:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4009:6:9"
																			},
																			"nativeSrc": "4009:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4009:15:9"
																		},
																		"nativeSrc": "4009:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4009:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4044:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4044:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4047:4:9",
																					"nodeType": "YulLiteral",
																					"src": "4047:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4037:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4037:6:9"
																			},
																			"nativeSrc": "4037:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4037:15:9"
																		},
																		"nativeSrc": "4037:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4037:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3935:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3935:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3938:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3938:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3932:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3932:2:9"
																},
																"nativeSrc": "3932:10:9",
																"nodeType": "YulFunctionCall",
																"src": "3932:10:9"
															},
															"nativeSrc": "3929:133:9",
															"nodeType": "YulIf",
															"src": "3929:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3846:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3877:1:9",
														"nodeType": "YulTypedName",
														"src": "3877:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3880:1:9",
														"nodeType": "YulTypedName",
														"src": "3880:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3886:3:9",
														"nodeType": "YulTypedName",
														"src": "3886:3:9",
														"type": ""
													}
												],
												"src": "3846:222:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e5575f3560e01c806370a082311161008857806395d89b411161006357806395d89b41146101d1578063a9059cbb146101d9578063dd62ed3e146101ec578063f2fde38b14610224575f80fd5b806370a0823114610186578063715018a6146101ae5780638da5cb5b146101b6575f80fd5b80631a825b75116100c35780631a825b751461013c57806323b872dd1461014f578063313ce5671461016257806340c10f1914610171575f80fd5b806306fdde03146100e9578063095ea7b31461010757806318160ddd1461012a575b5f80fd5b6100f1610237565b6040516100fe91906107f3565b60405180910390f35b61011a610115366004610843565b6102c7565b60405190151581526020016100fe565b6002545b6040519081526020016100fe565b61011a61014a366004610843565b6102e0565b61011a61015d36600461086b565b6103c0565b604051601281526020016100fe565b61018461017f366004610843565b6103d8565b005b61012e6101943660046108a5565b6001600160a01b03165f9081526020819052604090205490565b6101846103ee565b6005546040516001600160a01b0390911681526020016100fe565b6100f1610401565b61011a6101e7366004610843565b610410565b61012e6101fa3660046108c5565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101846102323660046108a5565b61041d565b606060038054610246906108f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610272906108f6565b80156102bd5780601f10610294576101008083540402835291602001916102bd565b820191905f5260205f20905b8154815290600101906020018083116102a057829003601f168201915b5050505050905090565b5f336102d481858561045f565b60019150505b92915050565b5f336102ed818585610471565b6001600160a01b0384163b156102d4576040516001600160a01b038281166024830152604482018590525f919086169060640160408051601f198184030181529181526020820180516001600160e01b03166324a756d160e01b17905251610355919061092e565b5f604051808303815f865af19150503d805f811461038e576040519150601f19603f3d011682016040523d82523d5f602084013e610393565b606091505b50509050806103b5576040516303e691c760e31b815260040160405180910390fd5b506001949350505050565b5f336103cd8582856104ce565b6103b5858585610471565b6103e0610549565b6103ea8282610576565b5050565b6103f6610549565b6103ff5f6105aa565b565b606060048054610246906108f6565b5f336102d4818585610471565b610425610549565b6001600160a01b03811661045357604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61045c816105aa565b50565b61046c83838360016105fb565b505050565b6001600160a01b03831661049a57604051634b637e8f60e11b81525f600482015260240161044a565b6001600160a01b0382166104c35760405163ec442f0560e01b81525f600482015260240161044a565b61046c8383836106cd565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610543578181101561053557604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161044a565b61054384848484035f6105fb565b50505050565b6005546001600160a01b031633146103ff5760405163118cdaa760e01b815233600482015260240161044a565b6001600160a01b03821661059f5760405163ec442f0560e01b81525f600482015260240161044a565b6103ea5f83836106cd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166106245760405163e602df0560e01b81525f600482015260240161044a565b6001600160a01b03831661064d57604051634a1406b160e11b81525f600482015260240161044a565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561054357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106bf91815260200190565b60405180910390a350505050565b6001600160a01b0383166106f7578060025f8282546106ec9190610944565b909155506107679050565b6001600160a01b0383165f90815260208190526040902054818110156107495760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161044a565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610783576002805482900390556107a1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107e691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461083e575f80fd5b919050565b5f8060408385031215610854575f80fd5b61085d83610828565b946020939093013593505050565b5f805f6060848603121561087d575f80fd5b61088684610828565b925061089460208501610828565b929592945050506040919091013590565b5f602082840312156108b5575f80fd5b6108be82610828565b9392505050565b5f80604083850312156108d6575f80fd5b6108df83610828565b91506108ed60208401610828565b90509250929050565b600181811c9082168061090a57607f821691505b60208210810361092857634e487b7160e01b5f52602260045260245ffd5b50919050565b5f82518060208501845e5f920191825250919050565b808201808211156102da57634e487b7160e01b5f52601160045260245ffdfea26469706673582212203288f012c2b1cd004f32ae809185cd5a074715d1889adba9eef90aea8d18557c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x224 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A825B75 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x1A825B75 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x12A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x11A PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x401 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x843 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A5 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2ED DUP2 DUP6 DUP6 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x24A756D1 PUSH1 0xE0 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x92E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x38E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x393 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3B5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E691C7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3CD DUP6 DUP3 DUP6 PUSH2 0x4CE JUMP JUMPDEST PUSH2 0x3B5 DUP6 DUP6 DUP6 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3EA DUP3 DUP3 PUSH2 0x576 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3F6 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3FF PUSH0 PUSH2 0x5AA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x5AA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x5FB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x49A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x543 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44A JUMP JUMPDEST PUSH2 0x543 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x5FB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH2 0x3EA PUSH0 DUP4 DUP4 PUSH2 0x6CD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x64D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x543 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6BF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6EC SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x767 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x44A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x783 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x83E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x85D DUP4 PUSH2 0x828 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x87D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x886 DUP5 PUSH2 0x828 JUMP JUMPDEST SWAP3 POP PUSH2 0x894 PUSH1 0x20 DUP6 ADD PUSH2 0x828 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8BE DUP3 PUSH2 0x828 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8DF DUP4 PUSH2 0x828 JUMP JUMPDEST SWAP2 POP PUSH2 0x8ED PUSH1 0x20 DUP5 ADD PUSH2 0x828 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x90A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x928 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN DUP9 CREATE SLT 0xC2 0xB1 0xCD STOP 0x4F ORIGIN 0xAE DUP1 SWAP2 DUP6 0xCD GAS SMOD SELFBALANCE ISZERO 0xD1 DUP9 SWAP11 0xDB 0xA9 0xEE 0xF9 EXP 0xEA DUP14 XOR SSTORE PUSH29 0x64736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "479:696:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:9;;1078:22;1060:41;;1048:2;1033:18;4293:186:2;920:187:9;3144:97:2;3222:12;;3144:97;;;1258:25:9;;;1246:2;1231:18;3144:97:2;1112:177:9;739:434:6;;;;;;:::i;:::-;;:::i;5039:244:2:-;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;1815:36:9;;1803:2;1788:18;3002:82:2;1673:184:9;640:93:6;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2199:51:9;;2187:2;2172:18;1638:85:0;2053:203:9;2276:93:2;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;739:434:6:-;815:4;846:10;866:27;846:10;882:2;886:6;866:9;:27::i;:::-;-1:-1:-1;;;;;907:13:6;;385:17;420:8;903:243;;964:72;;-1:-1:-1;;;;;3103:32:9;;;964:72:6;;;3085:51:9;3152:18;;;3145:34;;;939:12:6;;956:7;;;;3058:18:9;;964:72:6;;;-1:-1:-1;;964:72:6;;;;;;;;;;;;;;-1:-1:-1;;;;;964:72:6;-1:-1:-1;;;964:72:6;;;956:81;;;964:72;956:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:99;;;1056:7;1051:85;;1090:31;;-1:-1:-1;;;1090:31:6;;;;;;;;;;;1051:85;-1:-1:-1;1162:4:6;;739:434;-1:-1:-1;;;;739:434:6:o;5039:244:2:-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;640:93:6:-;1531:13:0;:11;:13::i;:::-;709:17:6::1;715:2;719:6;709:5;:17::i;:::-;640:93:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2199:51:9::0;2172:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2199:51:9;2172:18;;5780:30:2;2053:203:9;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2199:51:9;2172:18;;5873:32:2;2053:203:9;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;3716:32:9;;10936:60:2;;;3698:51:9;3765:18;;;3758:34;;;3808:18;;;3801:34;;;3671:18;;10936:60:2;3496:345:9;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2199:51:9;2172:18;;1901:40:0;2053:203:9;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2199:51:9;2172:18;;7835:32:2;2053:203:9;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2199:51:9;2172:18;;10103:32:2;2053:203:9;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2199:51:9;2172:18;;10203:31:2;2053:203:9;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1258:25:9;;1246:2;1231:18;;1112:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3716:32:9;;6649:50:2;;;3698:51:9;3765:18;;;3758:34;;;3808:18;;;3801:34;;;3671:18;;6649:50:2;3496:345:9;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1258::9;;1246:2;1231:18;;1112:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:418:9:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:9;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:9:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:9;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:9:o;2261:260::-;2329:6;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2429:29;2448:9;2429:29;:::i;:::-;2419:39;;2477:38;2511:2;2500:9;2496:18;2477:38;:::i;:::-;2467:48;;2261:260;;;;;:::o;2526:380::-;2605:1;2601:12;;;;2648;;;2669:61;;2723:4;2715:6;2711:17;2701:27;;2669:61;2776:2;2768:6;2765:14;2745:18;2742:38;2739:161;;2822:10;2817:3;2813:20;2810:1;2803:31;2857:4;2854:1;2847:15;2885:4;2882:1;2875:15;2739:161;;2526:380;;;:::o;3190:301::-;3319:3;3357:6;3351:13;3403:6;3396:4;3388:6;3384:17;3379:3;3373:37;3465:1;3429:16;;3454:13;;;-1:-1:-1;3429:16:9;3190:301;-1:-1:-1;3190:301:9:o;3846:222::-;3911:9;;;3932:10;;;3929:133;;;3984:10;3979:3;3975:20;3972:1;3965:31;4019:4;4016:1;4009:15;4047:4;4044:1;4037:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "491400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2560",
								"decimals()": "243",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"transferWithCallback(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 634,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 634,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 634,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 553,
									"end": 634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 616,
									"end": 626,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A32B9BA2A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1515"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2801,
									"end": 2852,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2655,
									"end": 2858,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2655,
									"end": 2858,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 1175,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203288f012c2b1cd004f32ae809185cd5a074715d1889adba9eef90aea8d18557c64736f6c634300081a0033",
									".code": [
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "1A825B75"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "1A825B75"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 479,
											"end": 1175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 739,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 733,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 640,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 640,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2187,
											"end": 2189,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 815,
											"end": 819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 866,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 882,
											"end": 884,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 866,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 866,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 866,
											"end": 893,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 866,
											"end": 893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 907,
											"end": 920,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 907,
											"end": 920,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 385,
											"end": 402,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 420,
											"end": 428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 903,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 903,
											"end": 1146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3103,
											"end": 3135,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3085,
											"end": 3136,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3179,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3179,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3145,
											"end": 3179,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 939,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 963,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 956,
											"end": 963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 956,
											"end": 963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24A756D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 956,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 938,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3E691C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1166,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1162,
											"end": 1166,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1173,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 739,
											"end": 1173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 733,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 640,
											"end": 733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 726,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 715,
											"end": 717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 719,
											"end": 725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 709,
											"end": 714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 709,
											"end": 726,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 709,
											"end": 726,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 709,
											"end": 726,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3748,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3748,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3749,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3496,
											"end": 3841,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2250,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2053,
											"end": 2256,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3748,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3748,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3749,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3758,
											"end": 3792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3826,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3496,
											"end": 3841,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2376,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2388,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2361,
											"end": 2393,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2408,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2358,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2429,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2429,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2509,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2514,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2477,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2477,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2669,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2765,
											"end": 2779,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2780,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2813,
											"end": 2833,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3491,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 3190,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3363,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3394,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3384,
											"end": 3401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3379,
											"end": 3382,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3410,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3445,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3467,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3429,
											"end": 3445,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3190,
											"end": 3491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4068,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3846,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3942,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3942,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 4062,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3929,
											"end": 4062,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 3994,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3979,
											"end": 3982,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3975,
											"end": 3995,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4023,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4009,
											"end": 4024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4047,
											"end": 4051,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4052,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"test-token.sol",
								"token-bank-v2.sol",
								"token-bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferWithCallback(address,uint256)": "1a825b75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToCallTokenReceivedHook\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferWithCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test-token.sol\":\"TestToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"test-token.sol\":{\"keccak256\":\"0x1432c29b792ada1a2ece29d926691b568c5ee819bf2545fbf985553d27f41ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9d4a47cd1f202c98a824659cfd736699fd009658c13784deb039da8e09569b\",\"dweb:/ipfs/QmZUAzsPYGNFwxFZPVnoYoRWt38SYZAyCfxwh9fhrhxudD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "test-token.sol:TestToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "test-token.sol:TestToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "test-token.sol:TestToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "test-token.sol:TestToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "test-token.sol:TestToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "test-token.sol:TestToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token-bank-v2.sol": {
				"TokenBankV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract TestToken",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract TestToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token-bank-v2.sol\":150:454  contract TokenBankV2 is TokenBank {... */\n  mstore(0x40, 0x80)\n    /* \"token-bank-v2.sol\":191:246  constructor(TestToken _token) TokenBank(_token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token-bank.sol\":245:250  token */\n  0x00\n    /* \"token-bank.sol\":245:259  token = _token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"token-bank-v2.sol\":150:454  contract TokenBankV2 is TokenBank {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:322   */\ntag_3:\n    /* \"#utility.yul\":102:108   */\n  0x00\n    /* \"#utility.yul\":155:157   */\n  0x20\n    /* \"#utility.yul\":143:152   */\n  dup3\n    /* \"#utility.yul\":134:141   */\n  dup5\n    /* \"#utility.yul\":130:153   */\n  sub\n    /* \"#utility.yul\":126:158   */\n  slt\n    /* \"#utility.yul\":123:175   */\n  iszero\n  tag_11\n  jumpi\n    /* \"#utility.yul\":171:172   */\n  0x00\n    /* \"#utility.yul\":168:169   */\n  dup1\n    /* \"#utility.yul\":161:173   */\n  revert\n    /* \"#utility.yul\":123:175   */\ntag_11:\n    /* \"#utility.yul\":197:213   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":242:273   */\n  dup2\n  and\n    /* \"#utility.yul\":232:274   */\n  dup2\n  eq\n    /* \"#utility.yul\":222:292   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":288:289   */\n  0x00\n    /* \"#utility.yul\":285:286   */\n  dup1\n    /* \"#utility.yul\":278:290   */\n  revert\n    /* \"#utility.yul\":222:292   */\ntag_12:\n    /* \"#utility.yul\":311:316   */\n  swap4\n    /* \"#utility.yul\":14:322   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n    /* \"token-bank-v2.sol\":150:454  contract TokenBankV2 is TokenBank {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token-bank-v2.sol\":150:454  contract TokenBankV2 is TokenBank {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x24a756d1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc7e286d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token-bank-v2.sol\":252:452  function tokensReceived(address from, uint256 amount) external {... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"token-bank.sol\":602:822  function withdraw(uint256 amount) public {... */\n    tag_4:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"token-bank.sol\":336:596  function deposit(uint256 amount) public {... */\n    tag_5:\n      tag_8\n      tag_17\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n        /* \"token-bank.sol\":130:152  TestToken public token */\n    tag_6:\n      sload(0x00)\n      tag_19\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":910:942   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":892:943   */\n      dup2\n      mstore\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":865:883   */\n      add\n        /* \"token-bank.sol\":130:152  TestToken public token */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-bank.sol\":158:198  mapping(address => uint) public deposits */\n    tag_7:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":1291:1316   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      add\n        /* \"token-bank.sol\":158:198  mapping(address => uint) public deposits */\n      tag_21\n        /* \"#utility.yul\":1145:1322   */\n      jump\n        /* \"token-bank-v2.sol\":252:452  function tokensReceived(address from, uint256 amount) external {... */\n    tag_11:\n        /* \"token-bank-v2.sol\":355:360  token */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"token-bank-v2.sol\":333:343  msg.sender */\n      caller\n        /* \"token-bank-v2.sol\":333:361  msg.sender == address(token) */\n      eq\n        /* \"token-bank-v2.sol\":325:411  require(msg.sender == address(token), \"Only the TestToken Contract can call the hook\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1529:1531   */\n      0x20\n        /* \"token-bank-v2.sol\":325:411  require(msg.sender == address(token), \"Only the TestToken Contract can call the hook\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1511:1532   */\n      mstore\n        /* \"#utility.yul\":1568:1570   */\n      0x2d\n        /* \"#utility.yul\":1548:1566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1541:1571   */\n      mstore\n        /* \"#utility.yul\":1607:1641   */\n      0x4f6e6c79207468652054657374546f6b656e20436f6e74726163742063616e20\n        /* \"#utility.yul\":1587:1605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1580:1642   */\n      mstore\n      shl(0x98, 0x63616c6c2074686520686f6f6b)\n        /* \"#utility.yul\":1658:1676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1651:1694   */\n      mstore\n        /* \"#utility.yul\":1711:1730   */\n      0x84\n      add\n        /* \"token-bank-v2.sol\":325:411  require(msg.sender == address(token), \"Only the TestToken Contract can call the hook\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank-v2.sol\":421:435  deposits[from] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank-v2.sol\":421:429  deposits */\n      0x01\n        /* \"token-bank-v2.sol\":421:435  deposits[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-bank-v2.sol\":421:445  deposits[from] += amount */\n      dup1\n      sload\n        /* \"token-bank-v2.sol\":439:445  amount */\n      dup4\n      swap3\n        /* \"token-bank-v2.sol\":421:435  deposits[from] */\n      swap1\n        /* \"token-bank-v2.sol\":421:445  deposits[from] += amount */\n      tag_33\n      swap1\n        /* \"token-bank-v2.sol\":439:445  amount */\n      dup5\n      swap1\n        /* \"token-bank-v2.sol\":421:445  deposits[from] += amount */\n      tag_34\n      jump\t// in\n    tag_33:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"token-bank-v2.sol\":252:452  function tokensReceived(address from, uint256 amount) external {... */\n      jump\t// out\n        /* \"token-bank.sol\":602:822  function withdraw(uint256 amount) public {... */\n    tag_15:\n        /* \"token-bank.sol\":670:680  msg.sender */\n      caller\n        /* \"token-bank.sol\":661:681  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank.sol\":661:669  deposits */\n      0x01\n        /* \"token-bank.sol\":661:681  deposits[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"token-bank.sol\":661:691  deposits[msg.sender] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2187:2208   */\n      mstore\n        /* \"#utility.yul\":2244:2246   */\n      0x23\n        /* \"#utility.yul\":2224:2242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2217:2247   */\n      mstore\n        /* \"#utility.yul\":2283:2317   */\n      0x4e6f20656e6f75676820746f6b656e2062616c616e636520746f207769746864\n        /* \"#utility.yul\":2263:2281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2256:2318   */\n      mstore\n      shl(0xe8, 0x726177)\n        /* \"#utility.yul\":2334:2352   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2327:2360   */\n      mstore\n        /* \"#utility.yul\":2377:2396   */\n      0x84\n      add\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n      tag_31\n        /* \"#utility.yul\":2003:2402   */\n      jump\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n    tag_36:\n        /* \"token-bank.sol\":741:746  token */\n      sload(0x00)\n        /* \"token-bank.sol\":741:775  token.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"token-bank.sol\":756:766  msg.sender */\n      caller\n        /* \"token-bank.sol\":741:775  token.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2581:2632   */\n      mstore\n        /* \"#utility.yul\":2648:2666   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2641:2675   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank.sol\":741:746  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-bank.sol\":741:755  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2554:2572   */\n      0x44\n      add\n        /* \"token-bank.sol\":741:775  token.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      pop\n        /* \"token-bank.sol\":794:804  msg.sender */\n      caller\n        /* \"token-bank.sol\":785:805  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank.sol\":785:793  deposits */\n      0x01\n        /* \"token-bank.sol\":785:805  deposits[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-bank.sol\":785:815  deposits[msg.sender] -= amount */\n      dup1\n      sload\n        /* \"token-bank.sol\":809:815  amount */\n      dup4\n      swap3\n        /* \"token-bank.sol\":785:805  deposits[msg.sender] */\n      swap1\n        /* \"token-bank.sol\":785:815  deposits[msg.sender] -= amount */\n      tag_45\n      swap1\n        /* \"token-bank.sol\":809:815  amount */\n      dup5\n      swap1\n        /* \"token-bank.sol\":785:815  deposits[msg.sender] -= amount */\n      tag_46\n      jump\t// in\n    tag_45:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"token-bank.sol\":602:822  function withdraw(uint256 amount) public {... */\n      jump\t// out\n        /* \"token-bank.sol\":336:596  function deposit(uint256 amount) public {... */\n    tag_18:\n        /* \"token-bank.sol\":404:409  token */\n      sload(0x00)\n        /* \"token-bank.sol\":404:446  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"token-bank.sol\":420:430  msg.sender */\n      caller\n        /* \"token-bank.sol\":404:446  token.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3275:3326   */\n      mstore\n        /* \"token-bank.sol\":440:444  this */\n      address\n        /* \"#utility.yul\":3342:3360   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3335:3395   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank.sol\":404:409  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-bank.sol\":404:419  token.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":3248:3266   */\n      0x44\n      add\n        /* \"token-bank.sol\":404:446  token.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"token-bank.sol\":394:400  amount */\n      dup2\n        /* \"token-bank.sol\":394:446  amount <= token.allowance(msg.sender, address(this)) */\n      gt\n      iszero\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3797:3799   */\n      0x20\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3779:3800   */\n      mstore\n        /* \"#utility.yul\":3836:3838   */\n      0x23\n        /* \"#utility.yul\":3816:3834   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3809:3839   */\n      mstore\n        /* \"#utility.yul\":3875:3909   */\n      0x4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f\n        /* \"#utility.yul\":3855:3873   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3848:3910   */\n      mstore\n      shl(0xea, 0x1cda5d)\n        /* \"#utility.yul\":3926:3944   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3919:3952   */\n      mstore\n        /* \"#utility.yul\":3969:3988   */\n      0x84\n      add\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n      tag_31\n        /* \"#utility.yul\":3595:3994   */\n      jump\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n    tag_54:\n        /* \"token-bank.sol\":496:501  token */\n      sload(0x00)\n        /* \"token-bank.sol\":496:549  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"token-bank.sol\":515:525  msg.sender */\n      caller\n        /* \"token-bank.sol\":496:549  token.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4201:4252   */\n      mstore\n        /* \"token-bank.sol\":535:539  this */\n      address\n        /* \"#utility.yul\":4268:4286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4261:4321   */\n      mstore\n        /* \"#utility.yul\":4337:4355   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4330:4364   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank.sol\":496:501  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-bank.sol\":496:514  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":4174:4192   */\n      0x64\n      add\n        /* \"token-bank.sol\":496:549  token.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_61:\n      pop\n        /* \"token-bank.sol\":568:578  msg.sender */\n      caller\n        /* \"token-bank.sol\":559:579  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank.sol\":559:567  deposits */\n      0x01\n        /* \"token-bank.sol\":559:579  deposits[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-bank.sol\":559:589  deposits[msg.sender] += amount */\n      dup1\n      sload\n        /* \"token-bank.sol\":583:589  amount */\n      dup4\n      swap3\n        /* \"token-bank.sol\":559:579  deposits[msg.sender] */\n      swap1\n        /* \"token-bank.sol\":559:589  deposits[msg.sender] += amount */\n      tag_45\n      swap1\n        /* \"token-bank.sol\":583:589  amount */\n      dup5\n      swap1\n        /* \"token-bank.sol\":559:589  deposits[msg.sender] += amount */\n      tag_34\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_63:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_67:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:492   */\n    tag_10:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_69:\n        /* \"#utility.yul\":360:389   */\n      tag_70\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_63\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":458:460   */\n      0x20\n        /* \"#utility.yul\":443:461   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":430:462   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:492   */\n      jump\t// out\n        /* \"#utility.yul\":497:723   */\n    tag_14:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_72:\n      pop\n        /* \"#utility.yul\":670:693   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:723   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":954:1140   */\n    tag_25:\n        /* \"#utility.yul\":1013:1019   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"#utility.yul\":1054:1063   */\n      dup3\n        /* \"#utility.yul\":1045:1052   */\n      dup5\n        /* \"#utility.yul\":1041:1064   */\n      sub\n        /* \"#utility.yul\":1037:1069   */\n      slt\n        /* \"#utility.yul\":1034:1086   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1082:1083   */\n      0x00\n        /* \"#utility.yul\":1079:1080   */\n      dup1\n        /* \"#utility.yul\":1072:1084   */\n      revert\n        /* \"#utility.yul\":1034:1086   */\n    tag_75:\n        /* \"#utility.yul\":1105:1134   */\n      tag_76\n        /* \"#utility.yul\":1124:1133   */\n      dup3\n        /* \"#utility.yul\":1105:1134   */\n      tag_63\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1095:1134   */\n      swap4\n        /* \"#utility.yul\":954:1140   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1868   */\n    tag_64:\n        /* \"#utility.yul\":1802:1812   */\n      0x4e487b71\n        /* \"#utility.yul\":1797:1800   */\n      0xe0\n        /* \"#utility.yul\":1793:1813   */\n      shl\n        /* \"#utility.yul\":1790:1791   */\n      0x00\n        /* \"#utility.yul\":1783:1814   */\n      mstore\n        /* \"#utility.yul\":1833:1837   */\n      0x11\n        /* \"#utility.yul\":1830:1831   */\n      0x04\n        /* \"#utility.yul\":1823:1838   */\n      mstore\n        /* \"#utility.yul\":1857:1861   */\n      0x24\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1847:1862   */\n      revert\n        /* \"#utility.yul\":1873:1998   */\n    tag_34:\n        /* \"#utility.yul\":1938:1947   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1959:1969   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1956:1992   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1972:1990   */\n      tag_82\n      tag_64\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1873:1998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:2963   */\n    tag_44:\n        /* \"#utility.yul\":2753:2759   */\n      0x00\n        /* \"#utility.yul\":2806:2808   */\n      0x20\n        /* \"#utility.yul\":2794:2803   */\n      dup3\n        /* \"#utility.yul\":2785:2792   */\n      dup5\n        /* \"#utility.yul\":2781:2804   */\n      sub\n        /* \"#utility.yul\":2777:2809   */\n      slt\n        /* \"#utility.yul\":2774:2826   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2819:2820   */\n      dup1\n        /* \"#utility.yul\":2812:2824   */\n      revert\n        /* \"#utility.yul\":2774:2826   */\n    tag_86:\n        /* \"#utility.yul\":2854:2863   */\n      dup2\n        /* \"#utility.yul\":2848:2864   */\n      mload\n        /* \"#utility.yul\":2907:2912   */\n      dup1\n        /* \"#utility.yul\":2900:2913   */\n      iszero\n        /* \"#utility.yul\":2893:2914   */\n      iszero\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2883:2915   */\n      eq\n        /* \"#utility.yul\":2873:2933   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2929:2930   */\n      0x00\n        /* \"#utility.yul\":2926:2927   */\n      dup1\n        /* \"#utility.yul\":2919:2931   */\n      revert\n        /* \"#utility.yul\":2968:3096   */\n    tag_46:\n        /* \"#utility.yul\":3035:3044   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3056:3067   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3053:3090   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3070:3088   */\n      tag_82\n      tag_64\n      jump\t// in\n        /* \"#utility.yul\":3406:3590   */\n    tag_53:\n        /* \"#utility.yul\":3476:3482   */\n      0x00\n        /* \"#utility.yul\":3529:3531   */\n      0x20\n        /* \"#utility.yul\":3517:3526   */\n      dup3\n        /* \"#utility.yul\":3508:3515   */\n      dup5\n        /* \"#utility.yul\":3504:3527   */\n      sub\n        /* \"#utility.yul\":3500:3532   */\n      slt\n        /* \"#utility.yul\":3497:3549   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3545:3546   */\n      0x00\n        /* \"#utility.yul\":3542:3543   */\n      dup1\n        /* \"#utility.yul\":3535:3547   */\n      revert\n        /* \"#utility.yul\":3497:3549   */\n    tag_93:\n      pop\n        /* \"#utility.yul\":3568:3584   */\n      mload\n      swap2\n        /* \"#utility.yul\":3406:3590   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209e262de25a4313529e77feea14192c6fd14f3e849ab2ab882abbca5667c051b364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1058": {
									"entryPoint": null,
									"id": 1058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1106": {
									"entryPoint": null,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_TestToken_$1040_fromMemory": {
									"entryPoint": 78,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:324:9",
										"nodeType": "YulBlock",
										"src": "0:324:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:209:9",
													"nodeType": "YulBlock",
													"src": "113:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "159:16:9",
																"nodeType": "YulBlock",
																"src": "159:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "168:1:9",
																					"nodeType": "YulLiteral",
																					"src": "168:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "171:1:9",
																					"nodeType": "YulLiteral",
																					"src": "171:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "161:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "161:6:9"
																			},
																			"nativeSrc": "161:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "161:12:9"
																		},
																		"nativeSrc": "161:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "161:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "134:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "134:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "143:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "130:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "130:3:9"
																		},
																		"nativeSrc": "130:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "130:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "155:2:9",
																		"nodeType": "YulLiteral",
																		"src": "155:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "126:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "126:3:9"
																},
																"nativeSrc": "126:32:9",
																"nodeType": "YulFunctionCall",
																"src": "126:32:9"
															},
															"nativeSrc": "123:52:9",
															"nodeType": "YulIf",
															"src": "123:52:9"
														},
														{
															"nativeSrc": "184:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "184:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "203:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "203:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "197:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "197:5:9"
																},
																"nativeSrc": "197:16:9",
																"nodeType": "YulFunctionCall",
																"src": "197:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "188:5:9",
																	"nodeType": "YulTypedName",
																	"src": "188:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "276:16:9",
																"nodeType": "YulBlock",
																"src": "276:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "285:1:9",
																					"nodeType": "YulLiteral",
																					"src": "285:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "288:1:9",
																					"nodeType": "YulLiteral",
																					"src": "288:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "278:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "278:6:9"
																			},
																			"nativeSrc": "278:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "278:12:9"
																		},
																		"nativeSrc": "278:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "278:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "235:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "235:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "246:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "246:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "261:3:9",
																										"nodeType": "YulLiteral",
																										"src": "261:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "266:1:9",
																										"nodeType": "YulLiteral",
																										"src": "266:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "257:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "257:3:9"
																								},
																								"nativeSrc": "257:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "257:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "270:1:9",
																								"nodeType": "YulLiteral",
																								"src": "270:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "253:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "253:3:9"
																						},
																						"nativeSrc": "253:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "253:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "242:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "242:3:9"
																				},
																				"nativeSrc": "242:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "242:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "232:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "232:2:9"
																		},
																		"nativeSrc": "232:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "232:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "225:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:9"
																},
																"nativeSrc": "225:50:9",
																"nodeType": "YulFunctionCall",
																"src": "225:50:9"
															},
															"nativeSrc": "222:70:9",
															"nodeType": "YulIf",
															"src": "222:70:9"
														},
														{
															"nativeSrc": "301:15:9",
															"nodeType": "YulAssignment",
															"src": "301:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "311:5:9",
																"nodeType": "YulIdentifier",
																"src": "311:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "301:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_TestToken_$1040_fromMemory",
												"nativeSrc": "14:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "79:9:9",
														"nodeType": "YulTypedName",
														"src": "79:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "90:7:9",
														"nodeType": "YulTypedName",
														"src": "90:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "102:6:9",
														"nodeType": "YulTypedName",
														"src": "102:6:9",
														"type": ""
													}
												],
												"src": "14:308:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_TestToken_$1040_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506040516105a23803806105a2833981016040819052602b91604e565b5f80546001600160a01b0319166001600160a01b03929092169190911790556079565b5f60208284031215605d575f80fd5b81516001600160a01b03811681146072575f80fd5b9392505050565b61051c806100865f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806324a756d1146100595780632e1a7d4d1461006e578063b6b55f2514610081578063fc0c546a14610094578063fc7e286d146100c3575b5f80fd5b61006c610067366004610411565b6100f0565b005b61006c61007c366004610439565b610194565b61006c61008f366004610439565b610296565b5f546100a6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e26100d1366004610450565b60016020525f908152604090205481565b6040519081526020016100ba565b5f546001600160a01b031633146101645760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c79207468652054657374546f6b656e20436f6e74726163742063616e2060448201526c63616c6c2074686520686f6f6b60981b60648201526084015b60405180910390fd5b6001600160a01b0382165f908152600160205260408120805483929061018b908490610484565b90915550505050565b335f908152600160205260409020548111156101fe5760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e2062616c616e636520746f20776974686460448201526272617760e81b606482015260840161015b565b5f5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561024b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026f919061049d565b50335f908152600160205260408120805483929061028e9084906104bc565b909155505050565b5f54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156102e1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030591906104cf565b8111156103605760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f6044820152621cda5d60ea1b606482015260840161015b565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156103b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d7919061049d565b50335f908152600160205260408120805483929061028e908490610484565b80356001600160a01b038116811461040c575f80fd5b919050565b5f8060408385031215610422575f80fd5b61042b836103f6565b946020939093013593505050565b5f60208284031215610449575f80fd5b5035919050565b5f60208284031215610460575f80fd5b610469826103f6565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561049757610497610470565b92915050565b5f602082840312156104ad575f80fd5b81518015158114610469575f80fd5b8181038181111561049757610497610470565b5f602082840312156104df575f80fd5b505191905056fea26469706673582212209e262de25a4313529e77feea14192c6fd14f3e849ab2ab882abbca5667c051b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5A2 CODESIZE SUB DUP1 PUSH2 0x5A2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x4E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x79 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x72 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x51C DUP1 PUSH2 0x86 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24A756D1 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xFC7E286D EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x411 JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST PUSH2 0x6C PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xA6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652054657374546F6B656E20436F6E74726163742063616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x63616C6C2074686520686F6F6B PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x18B SWAP1 DUP5 SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E2062616C616E636520746F207769746864 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726177 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15B JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28E SWAP1 DUP5 SWAP1 PUSH2 0x4BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E20617070726F76656420746F206465706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CDA5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15B JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28E SWAP1 DUP5 SWAP1 PUSH2 0x484 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x42B DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP3 PUSH2 0x3F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x470 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x469 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x470 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x26 0x2D 0xE2 GAS NUMBER SGT MSTORE SWAP15 PUSH24 0xFEEA14192C6FD14F3E849AB2AB882ABBCA5667C051B36473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "150:304:7:-:0;;;191:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;245:5:8;:14;;-1:-1:-1;;;;;;245:14:8;-1:-1:-1;;;;;245:14:8;;;;;;;;;;150:304:7;;14:308:9;102:6;155:2;143:9;134:7;130:23;126:32;123:52;;;171:1;168;161:12;123:52;197:16;;-1:-1:-1;;;;;242:31:9;;232:42;;222:70;;288:1;285;278:12;222:70;311:5;14:308;-1:-1:-1;;;14:308:9:o;:::-;150:304:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_1146": {
									"entryPoint": 662,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposits_1095": {
									"entryPoint": null,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensReceived_1083": {
									"entryPoint": 240,
									"id": 1083,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_1177": {
									"entryPoint": 404,
									"id": 1177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TestToken_$1040__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27b144588b0dea5f6da591f9301303fc04d971be153fd88438f4852bd6f02eaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4372:9",
										"nodeType": "YulBlock",
										"src": "0:4372:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:9",
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nativeSrc": "73:29:9",
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nativeSrc": "82:20:9",
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:9",
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:9",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:9",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nativeSrc": "167:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nativeSrc": "167:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:9",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:9",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nativeSrc": "146:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:9",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nativeSrc": "142:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nativeSrc": "131:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nativeSrc": "121:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nativeSrc": "114:50:9",
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nativeSrc": "111:70:9",
															"nodeType": "YulIf",
															"src": "111:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:9",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:9",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nativeSrc": "279:213:9",
													"nodeType": "YulBlock",
													"src": "279:213:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:9",
																"nodeType": "YulBlock",
																"src": "325:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:9",
																					"nodeType": "YulLiteral",
																					"src": "334:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:9",
																					"nodeType": "YulLiteral",
																					"src": "337:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:9"
																			},
																			"nativeSrc": "327:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:9"
																		},
																		"nativeSrc": "327:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:9"
																		},
																		"nativeSrc": "296:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "321:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:9"
																},
																"nativeSrc": "292:32:9",
																"nodeType": "YulFunctionCall",
																"src": "292:32:9"
															},
															"nativeSrc": "289:52:9",
															"nodeType": "YulIf",
															"src": "289:52:9"
														},
														{
															"nativeSrc": "350:39:9",
															"nodeType": "YulAssignment",
															"src": "350:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:9"
																},
																"nativeSrc": "360:29:9",
																"nodeType": "YulFunctionCall",
																"src": "360:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:9"
																}
															]
														},
														{
															"nativeSrc": "398:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "398:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "411:1:9",
																"nodeType": "YulLiteral",
																"src": "411:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "402:5:9",
																	"nodeType": "YulTypedName",
																	"src": "402:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "421:41:9",
															"nodeType": "YulAssignment",
															"src": "421:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "447:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "447:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "458:2:9",
																				"nodeType": "YulLiteral",
																				"src": "458:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "443:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "443:3:9"
																		},
																		"nativeSrc": "443:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "443:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "430:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "430:12:9"
																},
																"nativeSrc": "430:32:9",
																"nodeType": "YulFunctionCall",
																"src": "430:32:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "421:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "421:5:9"
																}
															]
														},
														{
															"nativeSrc": "471:15:9",
															"nodeType": "YulAssignment",
															"src": "471:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "481:5:9",
																"nodeType": "YulIdentifier",
																"src": "481:5:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "471:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:9",
														"nodeType": "YulTypedName",
														"src": "237:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:9",
														"nodeType": "YulTypedName",
														"src": "248:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:9",
														"nodeType": "YulTypedName",
														"src": "260:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:9",
														"nodeType": "YulTypedName",
														"src": "268:6:9",
														"type": ""
													}
												],
												"src": "192:300:9"
											},
											{
												"body": {
													"nativeSrc": "567:156:9",
													"nodeType": "YulBlock",
													"src": "567:156:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:9",
																"nodeType": "YulBlock",
																"src": "613:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:9",
																					"nodeType": "YulLiteral",
																					"src": "622:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:9",
																					"nodeType": "YulLiteral",
																					"src": "625:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:9"
																			},
																			"nativeSrc": "615:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:9"
																		},
																		"nativeSrc": "615:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:9"
																		},
																		"nativeSrc": "584:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:9",
																		"nodeType": "YulLiteral",
																		"src": "609:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:9"
																},
																"nativeSrc": "580:32:9",
																"nodeType": "YulFunctionCall",
																"src": "580:32:9"
															},
															"nativeSrc": "577:52:9",
															"nodeType": "YulIf",
															"src": "577:52:9"
														},
														{
															"nativeSrc": "638:14:9",
															"nodeType": "YulVariableDeclaration",
															"src": "638:14:9",
															"value": {
																"kind": "number",
																"nativeSrc": "651:1:9",
																"nodeType": "YulLiteral",
																"src": "651:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "642:5:9",
																	"nodeType": "YulTypedName",
																	"src": "642:5:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "661:32:9",
															"nodeType": "YulAssignment",
															"src": "661:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "683:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "670:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "670:12:9"
																},
																"nativeSrc": "670:23:9",
																"nodeType": "YulFunctionCall",
																"src": "670:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "661:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:9"
																}
															]
														},
														{
															"nativeSrc": "702:15:9",
															"nodeType": "YulAssignment",
															"src": "702:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "712:5:9",
																"nodeType": "YulIdentifier",
																"src": "712:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "702:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "497:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:9",
														"nodeType": "YulTypedName",
														"src": "533:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:9",
														"nodeType": "YulTypedName",
														"src": "544:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:9",
														"nodeType": "YulTypedName",
														"src": "556:6:9",
														"type": ""
													}
												],
												"src": "497:226:9"
											},
											{
												"body": {
													"nativeSrc": "847:102:9",
													"nodeType": "YulBlock",
													"src": "847:102:9",
													"statements": [
														{
															"nativeSrc": "857:26:9",
															"nodeType": "YulAssignment",
															"src": "857:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "869:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:2:9",
																		"nodeType": "YulLiteral",
																		"src": "880:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																},
																"nativeSrc": "865:18:9",
																"nodeType": "YulFunctionCall",
																"src": "865:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "857:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "857:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "899:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "899:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "914:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "914:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "930:3:9",
																								"nodeType": "YulLiteral",
																								"src": "930:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "935:1:9",
																								"nodeType": "YulLiteral",
																								"src": "935:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "926:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "926:3:9"
																						},
																						"nativeSrc": "926:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "926:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "939:1:9",
																						"nodeType": "YulLiteral",
																						"src": "939:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "922:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "922:3:9"
																				},
																				"nativeSrc": "922:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "922:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "910:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:9"
																		},
																		"nativeSrc": "910:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "910:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:9"
																},
																"nativeSrc": "892:51:9",
																"nodeType": "YulFunctionCall",
																"src": "892:51:9"
															},
															"nativeSrc": "892:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "892:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TestToken_$1040__to_t_address__fromStack_reversed",
												"nativeSrc": "728:221:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "816:9:9",
														"nodeType": "YulTypedName",
														"src": "816:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "827:6:9",
														"nodeType": "YulTypedName",
														"src": "827:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "838:4:9",
														"nodeType": "YulTypedName",
														"src": "838:4:9",
														"type": ""
													}
												],
												"src": "728:221:9"
											},
											{
												"body": {
													"nativeSrc": "1024:116:9",
													"nodeType": "YulBlock",
													"src": "1024:116:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1070:16:9",
																"nodeType": "YulBlock",
																"src": "1070:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1079:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1079:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1082:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1082:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1072:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1072:6:9"
																			},
																			"nativeSrc": "1072:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1072:12:9"
																		},
																		"nativeSrc": "1072:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1072:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1045:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1045:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1054:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1054:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1041:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1041:3:9"
																		},
																		"nativeSrc": "1041:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1041:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1066:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1037:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1037:3:9"
																},
																"nativeSrc": "1037:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1037:32:9"
															},
															"nativeSrc": "1034:52:9",
															"nodeType": "YulIf",
															"src": "1034:52:9"
														},
														{
															"nativeSrc": "1095:39:9",
															"nodeType": "YulAssignment",
															"src": "1095:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1124:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1124:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1105:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1105:18:9"
																},
																"nativeSrc": "1105:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1105:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1095:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "954:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "990:9:9",
														"nodeType": "YulTypedName",
														"src": "990:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1001:7:9",
														"nodeType": "YulTypedName",
														"src": "1001:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1013:6:9",
														"nodeType": "YulTypedName",
														"src": "1013:6:9",
														"type": ""
													}
												],
												"src": "954:186:9"
											},
											{
												"body": {
													"nativeSrc": "1246:76:9",
													"nodeType": "YulBlock",
													"src": "1246:76:9",
													"statements": [
														{
															"nativeSrc": "1256:26:9",
															"nodeType": "YulAssignment",
															"src": "1256:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1268:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1268:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1279:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1279:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1264:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:9"
																},
																"nativeSrc": "1264:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1264:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1256:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1298:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1298:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1309:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1309:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:9"
																},
																"nativeSrc": "1291:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1291:25:9"
															},
															"nativeSrc": "1291:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1291:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1145:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:9",
														"nodeType": "YulTypedName",
														"src": "1215:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1226:6:9",
														"nodeType": "YulTypedName",
														"src": "1226:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:9",
														"nodeType": "YulTypedName",
														"src": "1237:4:9",
														"type": ""
													}
												],
												"src": "1145:177:9"
											},
											{
												"body": {
													"nativeSrc": "1501:235:9",
													"nodeType": "YulBlock",
													"src": "1501:235:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1518:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1518:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1529:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1529:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1511:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:9"
																},
																"nativeSrc": "1511:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1511:21:9"
															},
															"nativeSrc": "1511:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1511:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1552:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1552:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1563:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1563:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1548:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:9"
																		},
																		"nativeSrc": "1548:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1568:2:9",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1541:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1541:6:9"
																},
																"nativeSrc": "1541:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1541:30:9"
															},
															"nativeSrc": "1541:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1541:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1591:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1602:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1602:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1587:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:9"
																		},
																		"nativeSrc": "1587:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1587:18:9"
																	},
																	{
																		"hexValue": "4f6e6c79207468652054657374546f6b656e20436f6e74726163742063616e20",
																		"kind": "string",
																		"nativeSrc": "1607:34:9",
																		"nodeType": "YulLiteral",
																		"src": "1607:34:9",
																		"type": "",
																		"value": "Only the TestToken Contract can "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1580:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:9"
																},
																"nativeSrc": "1580:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1580:62:9"
															},
															"nativeSrc": "1580:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "1580:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1673:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1673:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1658:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:9"
																		},
																		"nativeSrc": "1658:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1658:18:9"
																	},
																	{
																		"hexValue": "63616c6c2074686520686f6f6b",
																		"kind": "string",
																		"nativeSrc": "1678:15:9",
																		"nodeType": "YulLiteral",
																		"src": "1678:15:9",
																		"type": "",
																		"value": "call the hook"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1651:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1651:6:9"
																},
																"nativeSrc": "1651:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1651:43:9"
															},
															"nativeSrc": "1651:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "1651:43:9"
														},
														{
															"nativeSrc": "1703:27:9",
															"nodeType": "YulAssignment",
															"src": "1703:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1715:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1726:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1726:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1711:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1711:3:9"
																},
																"nativeSrc": "1711:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1711:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1703:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1703:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27b144588b0dea5f6da591f9301303fc04d971be153fd88438f4852bd6f02eaa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1327:409:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1478:9:9",
														"nodeType": "YulTypedName",
														"src": "1478:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1492:4:9",
														"nodeType": "YulTypedName",
														"src": "1492:4:9",
														"type": ""
													}
												],
												"src": "1327:409:9"
											},
											{
												"body": {
													"nativeSrc": "1773:95:9",
													"nodeType": "YulBlock",
													"src": "1773:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1790:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1790:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1797:3:9",
																				"nodeType": "YulLiteral",
																				"src": "1797:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1802:10:9",
																				"nodeType": "YulLiteral",
																				"src": "1802:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1793:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1793:3:9"
																		},
																		"nativeSrc": "1793:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1793:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1783:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:9"
																},
																"nativeSrc": "1783:31:9",
																"nodeType": "YulFunctionCall",
																"src": "1783:31:9"
															},
															"nativeSrc": "1783:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "1783:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1833:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:9"
																},
																"nativeSrc": "1823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1823:15:9"
															},
															"nativeSrc": "1823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:9"
																},
																"nativeSrc": "1847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1847:15:9"
															},
															"nativeSrc": "1847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1847:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1741:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1741:127:9"
											},
											{
												"body": {
													"nativeSrc": "1921:77:9",
													"nodeType": "YulBlock",
													"src": "1921:77:9",
													"statements": [
														{
															"nativeSrc": "1931:16:9",
															"nodeType": "YulAssignment",
															"src": "1931:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1942:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1942:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1945:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1945:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1938:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1938:3:9"
																},
																"nativeSrc": "1938:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1938:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1931:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1970:22:9",
																"nodeType": "YulBlock",
																"src": "1970:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1972:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1972:16:9"
																			},
																			"nativeSrc": "1972:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1972:18:9"
																		},
																		"nativeSrc": "1972:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1972:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1962:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1962:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1965:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1959:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1959:2:9"
																},
																"nativeSrc": "1959:10:9",
																"nodeType": "YulFunctionCall",
																"src": "1959:10:9"
															},
															"nativeSrc": "1956:36:9",
															"nodeType": "YulIf",
															"src": "1956:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1873:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1904:1:9",
														"nodeType": "YulTypedName",
														"src": "1904:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1907:1:9",
														"nodeType": "YulTypedName",
														"src": "1907:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1913:3:9",
														"nodeType": "YulTypedName",
														"src": "1913:3:9",
														"type": ""
													}
												],
												"src": "1873:125:9"
											},
											{
												"body": {
													"nativeSrc": "2177:225:9",
													"nodeType": "YulBlock",
													"src": "2177:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2194:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2194:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2187:6:9"
																},
																"nativeSrc": "2187:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2187:21:9"
															},
															"nativeSrc": "2187:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2187:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2228:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2228:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2239:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2239:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2224:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2224:3:9"
																		},
																		"nativeSrc": "2224:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2224:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2244:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2244:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2217:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2217:6:9"
																},
																"nativeSrc": "2217:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2217:30:9"
															},
															"nativeSrc": "2217:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2217:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2267:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2267:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2278:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2278:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2263:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:9"
																		},
																		"nativeSrc": "2263:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2263:18:9"
																	},
																	{
																		"hexValue": "4e6f20656e6f75676820746f6b656e2062616c616e636520746f207769746864",
																		"kind": "string",
																		"nativeSrc": "2283:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2283:34:9",
																		"type": "",
																		"value": "No enough token balance to withd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:9"
																},
																"nativeSrc": "2256:62:9",
																"nodeType": "YulFunctionCall",
																"src": "2256:62:9"
															},
															"nativeSrc": "2256:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "2256:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2338:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2338:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2349:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2349:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2334:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:9"
																		},
																		"nativeSrc": "2334:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2334:18:9"
																	},
																	{
																		"hexValue": "726177",
																		"kind": "string",
																		"nativeSrc": "2354:5:9",
																		"nodeType": "YulLiteral",
																		"src": "2354:5:9",
																		"type": "",
																		"value": "raw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2327:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:9"
																},
																"nativeSrc": "2327:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2327:33:9"
															},
															"nativeSrc": "2327:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2327:33:9"
														},
														{
															"nativeSrc": "2369:27:9",
															"nodeType": "YulAssignment",
															"src": "2369:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2381:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2392:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2377:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:9"
																},
																"nativeSrc": "2377:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2377:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2369:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2369:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2003:399:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2154:9:9",
														"nodeType": "YulTypedName",
														"src": "2154:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2168:4:9",
														"nodeType": "YulTypedName",
														"src": "2168:4:9",
														"type": ""
													}
												],
												"src": "2003:399:9"
											},
											{
												"body": {
													"nativeSrc": "2536:145:9",
													"nodeType": "YulBlock",
													"src": "2536:145:9",
													"statements": [
														{
															"nativeSrc": "2546:26:9",
															"nodeType": "YulAssignment",
															"src": "2546:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2558:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2558:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2569:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2554:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2554:3:9"
																},
																"nativeSrc": "2554:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2554:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2546:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2546:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2588:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2588:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2603:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2603:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2619:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2619:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2624:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2624:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2615:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2615:3:9"
																						},
																						"nativeSrc": "2615:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2615:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2628:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2628:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2611:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2611:3:9"
																				},
																				"nativeSrc": "2611:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2611:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2599:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2599:3:9"
																		},
																		"nativeSrc": "2599:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2599:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2581:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2581:6:9"
																},
																"nativeSrc": "2581:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2581:51:9"
															},
															"nativeSrc": "2581:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2581:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2648:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:9"
																		},
																		"nativeSrc": "2648:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2668:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2668:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2641:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:9"
																},
																"nativeSrc": "2641:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2641:34:9"
															},
															"nativeSrc": "2641:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2641:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2407:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2497:9:9",
														"nodeType": "YulTypedName",
														"src": "2497:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2516:6:9",
														"nodeType": "YulTypedName",
														"src": "2516:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2527:4:9",
														"nodeType": "YulTypedName",
														"src": "2527:4:9",
														"type": ""
													}
												],
												"src": "2407:274:9"
											},
											{
												"body": {
													"nativeSrc": "2764:199:9",
													"nodeType": "YulBlock",
													"src": "2764:199:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2810:16:9",
																"nodeType": "YulBlock",
																"src": "2810:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2819:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2819:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2822:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2822:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2812:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:9"
																			},
																			"nativeSrc": "2812:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2812:12:9"
																		},
																		"nativeSrc": "2812:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2785:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2785:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2794:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2781:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:9"
																		},
																		"nativeSrc": "2781:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2781:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2806:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2806:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2777:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:9"
																},
																"nativeSrc": "2777:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2777:32:9"
															},
															"nativeSrc": "2774:52:9",
															"nodeType": "YulIf",
															"src": "2774:52:9"
														},
														{
															"nativeSrc": "2835:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2835:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2854:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2854:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2848:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2848:5:9"
																},
																"nativeSrc": "2848:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2848:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2839:5:9",
																	"nodeType": "YulTypedName",
																	"src": "2839:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2917:16:9",
																"nodeType": "YulBlock",
																"src": "2917:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2926:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2926:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2929:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2929:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2919:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:9"
																			},
																			"nativeSrc": "2919:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2919:12:9"
																		},
																		"nativeSrc": "2919:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2919:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2886:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2886:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2907:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "2907:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2900:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "2900:6:9"
																						},
																						"nativeSrc": "2900:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2900:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2893:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2893:6:9"
																				},
																				"nativeSrc": "2893:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2893:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2883:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2883:2:9"
																		},
																		"nativeSrc": "2883:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2883:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2876:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:9"
																},
																"nativeSrc": "2876:40:9",
																"nodeType": "YulFunctionCall",
																"src": "2876:40:9"
															},
															"nativeSrc": "2873:60:9",
															"nodeType": "YulIf",
															"src": "2873:60:9"
														},
														{
															"nativeSrc": "2942:15:9",
															"nodeType": "YulAssignment",
															"src": "2942:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "2952:5:9",
																"nodeType": "YulIdentifier",
																"src": "2952:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2942:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2686:277:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2730:9:9",
														"nodeType": "YulTypedName",
														"src": "2730:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2741:7:9",
														"nodeType": "YulTypedName",
														"src": "2741:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2753:6:9",
														"nodeType": "YulTypedName",
														"src": "2753:6:9",
														"type": ""
													}
												],
												"src": "2686:277:9"
											},
											{
												"body": {
													"nativeSrc": "3017:79:9",
													"nodeType": "YulBlock",
													"src": "3017:79:9",
													"statements": [
														{
															"nativeSrc": "3027:17:9",
															"nodeType": "YulAssignment",
															"src": "3027:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3039:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3039:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3042:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3042:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3035:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3035:3:9"
																},
																"nativeSrc": "3035:9:9",
																"nodeType": "YulFunctionCall",
																"src": "3035:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3027:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3027:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3068:22:9",
																"nodeType": "YulBlock",
																"src": "3068:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3070:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3070:16:9"
																			},
																			"nativeSrc": "3070:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:18:9"
																		},
																		"nativeSrc": "3070:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3059:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3059:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3065:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3065:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3056:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3056:2:9"
																},
																"nativeSrc": "3056:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3056:11:9"
															},
															"nativeSrc": "3053:37:9",
															"nodeType": "YulIf",
															"src": "3053:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2968:128:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2999:1:9",
														"nodeType": "YulTypedName",
														"src": "2999:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3002:1:9",
														"nodeType": "YulTypedName",
														"src": "3002:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3008:4:9",
														"nodeType": "YulTypedName",
														"src": "3008:4:9",
														"type": ""
													}
												],
												"src": "2968:128:9"
											},
											{
												"body": {
													"nativeSrc": "3230:171:9",
													"nodeType": "YulBlock",
													"src": "3230:171:9",
													"statements": [
														{
															"nativeSrc": "3240:26:9",
															"nodeType": "YulAssignment",
															"src": "3240:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3252:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3252:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3263:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3263:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3248:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:9"
																},
																"nativeSrc": "3248:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3248:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3240:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3240:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3282:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3282:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3297:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3313:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3313:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3318:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3318:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3309:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3309:3:9"
																						},
																						"nativeSrc": "3309:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3309:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3322:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3322:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3305:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3305:3:9"
																				},
																				"nativeSrc": "3305:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3305:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3293:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:9"
																		},
																		"nativeSrc": "3293:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3275:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:9"
																},
																"nativeSrc": "3275:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3275:51:9"
															},
															"nativeSrc": "3275:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3275:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3346:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3357:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3357:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3342:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:9"
																		},
																		"nativeSrc": "3342:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3342:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3366:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3382:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3382:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3387:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3387:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3378:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3378:3:9"
																						},
																						"nativeSrc": "3378:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3378:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3391:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3391:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3374:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:9"
																				},
																				"nativeSrc": "3374:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3362:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:9"
																		},
																		"nativeSrc": "3362:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3362:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3335:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3335:6:9"
																},
																"nativeSrc": "3335:60:9",
																"nodeType": "YulFunctionCall",
																"src": "3335:60:9"
															},
															"nativeSrc": "3335:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "3335:60:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "3101:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3191:9:9",
														"nodeType": "YulTypedName",
														"src": "3191:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3202:6:9",
														"nodeType": "YulTypedName",
														"src": "3202:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3210:6:9",
														"nodeType": "YulTypedName",
														"src": "3210:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3221:4:9",
														"nodeType": "YulTypedName",
														"src": "3221:4:9",
														"type": ""
													}
												],
												"src": "3101:300:9"
											},
											{
												"body": {
													"nativeSrc": "3487:103:9",
													"nodeType": "YulBlock",
													"src": "3487:103:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3533:16:9",
																"nodeType": "YulBlock",
																"src": "3533:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3542:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3542:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3545:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3545:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3535:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3535:6:9"
																			},
																			"nativeSrc": "3535:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3535:12:9"
																		},
																		"nativeSrc": "3535:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3535:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3508:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3508:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3517:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3517:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:9"
																		},
																		"nativeSrc": "3504:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3504:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3529:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3529:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3500:3:9"
																},
																"nativeSrc": "3500:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3500:32:9"
															},
															"nativeSrc": "3497:52:9",
															"nodeType": "YulIf",
															"src": "3497:52:9"
														},
														{
															"nativeSrc": "3558:26:9",
															"nodeType": "YulAssignment",
															"src": "3558:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3574:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3574:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3568:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3568:5:9"
																},
																"nativeSrc": "3568:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3568:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3558:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3406:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3453:9:9",
														"nodeType": "YulTypedName",
														"src": "3453:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3464:7:9",
														"nodeType": "YulTypedName",
														"src": "3464:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3476:6:9",
														"nodeType": "YulTypedName",
														"src": "3476:6:9",
														"type": ""
													}
												],
												"src": "3406:184:9"
											},
											{
												"body": {
													"nativeSrc": "3769:225:9",
													"nodeType": "YulBlock",
													"src": "3769:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3786:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3786:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3797:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3779:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3779:6:9"
																},
																"nativeSrc": "3779:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3779:21:9"
															},
															"nativeSrc": "3779:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3779:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3820:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3820:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3831:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3831:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3816:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:9"
																		},
																		"nativeSrc": "3816:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3836:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3836:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3809:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:9"
																},
																"nativeSrc": "3809:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3809:30:9"
															},
															"nativeSrc": "3809:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "3809:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3859:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3859:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3870:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3870:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3855:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3855:3:9"
																		},
																		"nativeSrc": "3855:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3855:18:9"
																	},
																	{
																		"hexValue": "4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f",
																		"kind": "string",
																		"nativeSrc": "3875:34:9",
																		"nodeType": "YulLiteral",
																		"src": "3875:34:9",
																		"type": "",
																		"value": "No enough token approved to depo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3848:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:9"
																},
																"nativeSrc": "3848:62:9",
																"nodeType": "YulFunctionCall",
																"src": "3848:62:9"
															},
															"nativeSrc": "3848:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "3848:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3941:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3941:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3926:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3926:3:9"
																		},
																		"nativeSrc": "3926:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3926:18:9"
																	},
																	{
																		"hexValue": "736974",
																		"kind": "string",
																		"nativeSrc": "3946:5:9",
																		"nodeType": "YulLiteral",
																		"src": "3946:5:9",
																		"type": "",
																		"value": "sit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3919:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:9"
																},
																"nativeSrc": "3919:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3919:33:9"
															},
															"nativeSrc": "3919:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3919:33:9"
														},
														{
															"nativeSrc": "3961:27:9",
															"nodeType": "YulAssignment",
															"src": "3961:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3973:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3973:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3984:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3984:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:9"
																},
																"nativeSrc": "3969:19:9",
																"nodeType": "YulFunctionCall",
																"src": "3969:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3961:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3961:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3595:399:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3746:9:9",
														"nodeType": "YulTypedName",
														"src": "3746:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3760:4:9",
														"nodeType": "YulTypedName",
														"src": "3760:4:9",
														"type": ""
													}
												],
												"src": "3595:399:9"
											},
											{
												"body": {
													"nativeSrc": "4156:214:9",
													"nodeType": "YulBlock",
													"src": "4156:214:9",
													"statements": [
														{
															"nativeSrc": "4166:26:9",
															"nodeType": "YulAssignment",
															"src": "4166:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4178:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4178:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4189:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4174:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4174:3:9"
																},
																"nativeSrc": "4174:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4174:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4166:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4166:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4208:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4223:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4239:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4239:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4244:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4244:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4235:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4235:3:9"
																						},
																						"nativeSrc": "4235:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4235:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4248:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4248:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4231:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4231:3:9"
																				},
																				"nativeSrc": "4231:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4231:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4219:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:9"
																		},
																		"nativeSrc": "4219:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4201:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:9"
																},
																"nativeSrc": "4201:51:9",
																"nodeType": "YulFunctionCall",
																"src": "4201:51:9"
															},
															"nativeSrc": "4201:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "4201:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4272:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4272:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4283:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4283:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4268:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:9"
																		},
																		"nativeSrc": "4268:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4268:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4292:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4292:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4308:3:9",
																								"nodeType": "YulLiteral",
																								"src": "4308:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4313:1:9",
																								"nodeType": "YulLiteral",
																								"src": "4313:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4304:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "4304:3:9"
																						},
																						"nativeSrc": "4304:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "4304:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4317:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4317:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4300:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4300:3:9"
																				},
																				"nativeSrc": "4300:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4300:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4288:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:9"
																		},
																		"nativeSrc": "4288:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4288:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4261:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:9"
																},
																"nativeSrc": "4261:60:9",
																"nodeType": "YulFunctionCall",
																"src": "4261:60:9"
															},
															"nativeSrc": "4261:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "4261:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4341:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4341:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4352:2:9",
																				"nodeType": "YulLiteral",
																				"src": "4352:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4337:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:9"
																		},
																		"nativeSrc": "4337:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4337:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4357:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4357:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4330:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:9"
																},
																"nativeSrc": "4330:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4330:34:9"
															},
															"nativeSrc": "4330:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4330:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3999:371:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4109:9:9",
														"nodeType": "YulTypedName",
														"src": "4109:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4120:6:9",
														"nodeType": "YulTypedName",
														"src": "4120:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:9",
														"nodeType": "YulTypedName",
														"src": "4128:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4136:6:9",
														"nodeType": "YulTypedName",
														"src": "4136:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4147:4:9",
														"nodeType": "YulTypedName",
														"src": "4147:4:9",
														"type": ""
													}
												],
												"src": "3999:371:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_TestToken_$1040__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_27b144588b0dea5f6da591f9301303fc04d971be153fd88438f4852bd6f02eaa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Only the TestToken Contract can \")\n        mstore(add(headStart, 96), \"call the hook\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"No enough token balance to withd\")\n        mstore(add(headStart, 96), \"raw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"No enough token approved to depo\")\n        mstore(add(headStart, 96), \"sit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c806324a756d1146100595780632e1a7d4d1461006e578063b6b55f2514610081578063fc0c546a14610094578063fc7e286d146100c3575b5f80fd5b61006c610067366004610411565b6100f0565b005b61006c61007c366004610439565b610194565b61006c61008f366004610439565b610296565b5f546100a6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e26100d1366004610450565b60016020525f908152604090205481565b6040519081526020016100ba565b5f546001600160a01b031633146101645760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c79207468652054657374546f6b656e20436f6e74726163742063616e2060448201526c63616c6c2074686520686f6f6b60981b60648201526084015b60405180910390fd5b6001600160a01b0382165f908152600160205260408120805483929061018b908490610484565b90915550505050565b335f908152600160205260409020548111156101fe5760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e2062616c616e636520746f20776974686460448201526272617760e81b606482015260840161015b565b5f5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561024b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026f919061049d565b50335f908152600160205260408120805483929061028e9084906104bc565b909155505050565b5f54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156102e1573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061030591906104cf565b8111156103605760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f6044820152621cda5d60ea1b606482015260840161015b565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156103b3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103d7919061049d565b50335f908152600160205260408120805483929061028e908490610484565b80356001600160a01b038116811461040c575f80fd5b919050565b5f8060408385031215610422575f80fd5b61042b836103f6565b946020939093013593505050565b5f60208284031215610449575f80fd5b5035919050565b5f60208284031215610460575f80fd5b610469826103f6565b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561049757610497610470565b92915050565b5f602082840312156104ad575f80fd5b81518015158114610469575f80fd5b8181038181111561049757610497610470565b5f602082840312156104df575f80fd5b505191905056fea26469706673582212209e262de25a4313529e77feea14192c6fd14f3e849ab2ab882abbca5667c051b364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24A756D1 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xFC7E286D EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x67 CALLDATASIZE PUSH1 0x4 PUSH2 0x411 JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6C PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x194 JUMP JUMPDEST PUSH2 0x6C PUSH2 0x8F CALLDATASIZE PUSH1 0x4 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x296 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xA6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x450 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652054657374546F6B656E20436F6E74726163742063616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x63616C6C2074686520686F6F6B PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x18B SWAP1 DUP5 SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E2062616C616E636520746F207769746864 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726177 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15B JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28E SWAP1 DUP5 SWAP1 PUSH2 0x4BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E20617070726F76656420746F206465706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CDA5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15B JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x49D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x28E SWAP1 DUP5 SWAP1 PUSH2 0x484 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x42B DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x469 DUP3 PUSH2 0x3F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x470 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x469 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x497 JUMPI PUSH2 0x497 PUSH2 0x470 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x26 0x2D 0xE2 GAS NUMBER SGT MSTORE SWAP15 PUSH24 0xFEEA14192C6FD14F3E849AB2AB882ABBCA5667C051B36473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "150:304:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:200;;;;;;:::i;:::-;;:::i;:::-;;602:220:8;;;;;;:::i;:::-;;:::i;336:260::-;;;;;;:::i;:::-;;:::i;130:22::-;;;;;-1:-1:-1;;;;;130:22:8;;;;;;-1:-1:-1;;;;;910:32:9;;;892:51;;880:2;865:18;130:22:8;;;;;;;;158:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1291:25:9;;;1279:2;1264:18;158:40:8;1145:177:9;252:200:7;355:5;;-1:-1:-1;;;;;355:5:7;333:10;:28;325:86;;;;-1:-1:-1;;;325:86:7;;1529:2:9;325:86:7;;;1511:21:9;1568:2;1548:18;;;1541:30;1607:34;1587:18;;;1580:62;-1:-1:-1;;;1658:18:9;;;1651:43;1711:19;;325:86:7;;;;;;;;;-1:-1:-1;;;;;421:14:7;;;;;;:8;:14;;;;;:24;;439:6;;421:14;:24;;439:6;;421:24;:::i;:::-;;;;-1:-1:-1;;;;252:200:7:o;602:220:8:-;670:10;661:20;;;;:8;:20;;;;;;:30;-1:-1:-1;661:30:8;653:78;;;;-1:-1:-1;;;653:78:8;;2205:2:9;653:78:8;;;2187:21:9;2244:2;2224:18;;;2217:30;2283:34;2263:18;;;2256:62;-1:-1:-1;;;2334:18:9;;;2327:33;2377:19;;653:78:8;2003:399:9;653:78:8;741:5;;:34;;-1:-1:-1;;;741:34:8;;756:10;741:34;;;2581:51:9;2648:18;;;2641:34;;;-1:-1:-1;;;;;741:5:8;;;;:14;;2554:18:9;;741:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;794:10:8;785:20;;;;:8;:20;;;;;:30;;809:6;;785:20;:30;;809:6;;785:30;:::i;:::-;;;;-1:-1:-1;;;602:220:8:o;336:260::-;404:5;;:42;;-1:-1:-1;;;404:42:8;;420:10;404:42;;;3275:51:9;440:4:8;3342:18:9;;;3335:60;-1:-1:-1;;;;;404:5:8;;;;:15;;3248:18:9;;404:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;394:6;:52;;386:100;;;;-1:-1:-1;;;386:100:8;;3797:2:9;386:100:8;;;3779:21:9;3836:2;3816:18;;;3809:30;3875:34;3855:18;;;3848:62;-1:-1:-1;;;3926:18:9;;;3919:33;3969:19;;386:100:8;3595:399:9;386:100:8;496:5;;:53;;-1:-1:-1;;;496:53:8;;515:10;496:53;;;4201:51:9;535:4:8;4268:18:9;;;4261:60;4337:18;;;4330:34;;;-1:-1:-1;;;;;496:5:8;;;;:18;;4174::9;;496:53:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;568:10:8;559:20;;;;:8;:20;;;;;:30;;583:6;;559:20;:30;;583:6;;559:30;:::i;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;458:2;443:18;;;;430:32;;-1:-1:-1;;;192:300:9:o;497:226::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;670:23:9;;497:226;-1:-1:-1;497:226:9:o;954:186::-;1013:6;1066:2;1054:9;1045:7;1041:23;1037:32;1034:52;;;1082:1;1079;1072:12;1034:52;1105:29;1124:9;1105:29;:::i;:::-;1095:39;954:186;-1:-1:-1;;;954:186:9:o;1741:127::-;1802:10;1797:3;1793:20;1790:1;1783:31;1833:4;1830:1;1823:15;1857:4;1854:1;1847:15;1873:125;1938:9;;;1959:10;;;1956:36;;;1972:18;;:::i;:::-;1873:125;;;;:::o;2686:277::-;2753:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;2854:9;2848:16;2907:5;2900:13;2893:21;2886:5;2883:32;2873:60;;2929:1;2926;2919:12;2968:128;3035:9;;;3056:11;;;3053:37;;;3070:18;;:::i;3406:184::-;3476:6;3529:2;3517:9;3508:7;3504:23;3500:32;3497:52;;;3545:1;3542;3535:12;3497:52;-1:-1:-1;3568:16:9;;3406:184;-1:-1:-1;3406:184:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "261600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(uint256)": "infinite",
								"deposits(address)": "2582",
								"token()": "2368",
								"tokensReceived(address,uint256)": "26831",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 191,
									"end": 246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 191,
									"end": 246,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 191,
									"end": 246,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 245,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 259,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 245,
									"end": 259,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 322,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 322,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 157,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 143,
									"end": 152,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 134,
									"end": 141,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 130,
									"end": 153,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 126,
									"end": 158,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 123,
									"end": 175,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 123,
									"end": 175,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 123,
									"end": 175,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 171,
									"end": 172,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 169,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 161,
									"end": 173,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 123,
									"end": 175,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 123,
									"end": 175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 213,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 197,
									"end": 213,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 242,
									"end": 273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 242,
									"end": 273,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 232,
									"end": 274,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 232,
									"end": 274,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 222,
									"end": 292,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 222,
									"end": 292,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 288,
									"end": 289,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 278,
									"end": 290,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 222,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 222,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 311,
									"end": 316,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 322,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 322,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 322,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 322,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 150,
									"end": 454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 454,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e262de25a4313529e77feea14192c6fd14f3e849ab2ab882abbca5667c051b364736f6c634300081a0033",
									".code": [
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "24A756D1"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "B6B55F25"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "FC7E286D"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 150,
											"end": 454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 252,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 252,
											"end": 452,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 602,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 602,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 336,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 130,
											"end": 152,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 910,
											"end": 942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 910,
											"end": 942,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 910,
											"end": 942,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 892,
											"end": 943,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 892,
											"end": 943,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 158,
											"end": 198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1145,
											"end": 1322,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 252,
											"end": 452,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 355,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 360,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 355,
											"end": 360,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 333,
											"end": 343,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 333,
											"end": 361,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 325,
											"end": 411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1568,
											"end": 1570,
											"name": "PUSH",
											"source": 9,
											"value": "2D"
										},
										{
											"begin": 1548,
											"end": 1566,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1548,
											"end": 1566,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1566,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1607,
											"end": 1641,
											"name": "PUSH",
											"source": 9,
											"value": "4F6E6C79207468652054657374546F6B656E20436F6E74726163742063616E20"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63616C6C2074686520686F6F6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1658,
											"end": 1676,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1658,
											"end": 1676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1676,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1711,
											"end": 1730,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1711,
											"end": 1730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 325,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 325,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 421,
											"end": 435,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 421,
											"end": 435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 421,
											"end": 429,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 421,
											"end": 435,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 421,
											"end": 435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 439,
											"end": 445,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 421,
											"end": 435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 421,
											"end": 445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 439,
											"end": 445,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 439,
											"end": 445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 421,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 421,
											"end": 445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 421,
											"end": 445,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 252,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 661,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 661,
											"end": 691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 653,
											"end": 731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2283,
											"end": 2317,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20656E6F75676820746F6B656E2062616C616E636520746F207769746864"
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2256,
											"end": 2318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2396,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2377,
											"end": 2396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2003,
											"end": 2402,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 756,
											"end": 766,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2632,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2675,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 741,
											"end": 755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 804,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 785,
											"end": 793,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 785,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 785,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 602,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 420,
											"end": 430,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3326,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 440,
											"end": 444,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 419,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 404,
											"end": 419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 404,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 394,
											"end": 446,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 394,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 386,
											"end": 486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3838,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3809,
											"end": 3839,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3875,
											"end": 3909,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20656E6F75676820746F6B656E20617070726F76656420746F206465706F"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 3952,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 3988,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3969,
											"end": 3988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3595,
											"end": 3994,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 386,
											"end": 486,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 535,
											"end": 539,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4337,
											"end": 4355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4364,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 514,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 496,
											"end": 514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 496,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 568,
											"end": 578,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 567,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 559,
											"end": 589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 559,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 192,
											"end": 492,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 192,
											"end": 492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 458,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 461,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 443,
											"end": 461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 443,
											"end": 461,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 443,
											"end": 461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 430,
											"end": 462,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 430,
											"end": 462,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 497,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 497,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 497,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1140,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 954,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1013,
											"end": 1019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1045,
											"end": 1052,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1069,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1086,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1034,
											"end": 1086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1080,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1084,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1086,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1034,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1124,
											"end": 1133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1105,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1105,
											"end": 1134,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1105,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1095,
											"end": 1134,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1140,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 954,
											"end": 1140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1741,
											"end": 1868,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1741,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1812,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1793,
											"end": 1813,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1814,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1823,
											"end": 1838,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1862,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1998,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1873,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1969,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1969,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1956,
											"end": 1992,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1972,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1998,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2963,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2686,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2808,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2785,
											"end": 2792,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2777,
											"end": 2809,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2774,
											"end": 2826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2812,
											"end": 2824,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2774,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2864,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2912,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 2913,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2914,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2915,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 2873,
											"end": 2933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2968,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3067,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3090,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3053,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3053,
											"end": 3090,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3590,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3406,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3476,
											"end": 3482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3517,
											"end": 3526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3527,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3549,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3497,
											"end": 3549,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3549,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3497,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"test-token.sol",
								"token-bank-v2.sol",
								"token-bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25",
							"deposits(address)": "fc7e286d",
							"token()": "fc0c546a",
							"tokensReceived(address,uint256)": "24a756d1",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract TestToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TestToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-bank-v2.sol\":\"TokenBankV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"test-token.sol\":{\"keccak256\":\"0x1432c29b792ada1a2ece29d926691b568c5ee819bf2545fbf985553d27f41ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9d4a47cd1f202c98a824659cfd736699fd009658c13784deb039da8e09569b\",\"dweb:/ipfs/QmZUAzsPYGNFwxFZPVnoYoRWt38SYZAyCfxwh9fhrhxudD\"]},\"token-bank-v2.sol\":{\"keccak256\":\"0x2a616f2d1a15a545e58297c871d51eebb2fbd0f52447e4b1c080aa4b4226e5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e5d580a317551df813031969280d355545464e3c5b6e1a9b49584815b3708c\",\"dweb:/ipfs/QmcvJzvCtZXGdSsX4T6UMznQMMNMEm6JTedhwdLJy3uMVm\"]},\"token-bank.sol\":{\"keccak256\":\"0x3518fcbdcc63af88dcfdfa07fb50f65c182f1a81a40fae966ef14f784edbfb16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66d0775802e995e51ceae38c17f7c0de848d55b6aa3cfa74c8b0241d09ffe4ca\",\"dweb:/ipfs/QmW4UaUuU9MQpYisid2o2gT75bB5konTHAKVgN3BxnAKai\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1091,
								"contract": "token-bank-v2.sol:TokenBankV2",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(TestToken)1040"
							},
							{
								"astId": 1095,
								"contract": "token-bank-v2.sol:TokenBankV2",
								"label": "deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(TestToken)1040": {
								"encoding": "inplace",
								"label": "contract TestToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token-bank.sol": {
				"TokenBank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract TestToken",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract TestToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token-bank.sol\":104:824  contract TokenBank {... */\n  mstore(0x40, 0x80)\n    /* \"token-bank.sol\":205:266  constructor(TestToken _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token-bank.sol\":245:250  token */\n  0x00\n    /* \"token-bank.sol\":245:259  token = _token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"token-bank.sol\":104:824  contract TokenBank {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:322   */\ntag_3:\n    /* \"#utility.yul\":102:108   */\n  0x00\n    /* \"#utility.yul\":155:157   */\n  0x20\n    /* \"#utility.yul\":143:152   */\n  dup3\n    /* \"#utility.yul\":134:141   */\n  dup5\n    /* \"#utility.yul\":130:153   */\n  sub\n    /* \"#utility.yul\":126:158   */\n  slt\n    /* \"#utility.yul\":123:175   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":171:172   */\n  0x00\n    /* \"#utility.yul\":168:169   */\n  dup1\n    /* \"#utility.yul\":161:173   */\n  revert\n    /* \"#utility.yul\":123:175   */\ntag_9:\n    /* \"#utility.yul\":197:213   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":242:273   */\n  dup2\n  and\n    /* \"#utility.yul\":232:274   */\n  dup2\n  eq\n    /* \"#utility.yul\":222:292   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":288:289   */\n  0x00\n    /* \"#utility.yul\":285:286   */\n  dup1\n    /* \"#utility.yul\":278:290   */\n  revert\n    /* \"#utility.yul\":222:292   */\ntag_10:\n    /* \"#utility.yul\":311:316   */\n  swap4\n    /* \"#utility.yul\":14:322   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"token-bank.sol\":104:824  contract TokenBank {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token-bank.sol\":104:824  contract TokenBank {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xfc7e286d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token-bank.sol\":602:822  function withdraw(uint256 amount) public {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"token-bank.sol\":336:596  function deposit(uint256 amount) public {... */\n    tag_4:\n      tag_7\n      tag_12\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n        /* \"token-bank.sol\":130:152  TestToken public token */\n    tag_5:\n      sload(0x00)\n      tag_14\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":381:413   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":363:414   */\n      dup2\n      mstore\n        /* \"#utility.yul\":351:353   */\n      0x20\n        /* \"#utility.yul\":336:354   */\n      add\n        /* \"token-bank.sol\":130:152  TestToken public token */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-bank.sol\":158:198  mapping(address => uint) public deposits */\n    tag_6:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":862:887   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":850:852   */\n      0x20\n        /* \"#utility.yul\":835:853   */\n      add\n        /* \"token-bank.sol\":158:198  mapping(address => uint) public deposits */\n      tag_16\n        /* \"#utility.yul\":716:893   */\n      jump\n        /* \"token-bank.sol\":602:822  function withdraw(uint256 amount) public {... */\n    tag_10:\n        /* \"token-bank.sol\":670:680  msg.sender */\n      caller\n        /* \"token-bank.sol\":661:681  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank.sol\":661:669  deposits */\n      0x01\n        /* \"token-bank.sol\":661:681  deposits[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"token-bank.sol\":661:691  deposits[msg.sender] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1100:1102   */\n      0x20\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1082:1103   */\n      mstore\n        /* \"#utility.yul\":1139:1141   */\n      0x23\n        /* \"#utility.yul\":1119:1137   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1112:1142   */\n      mstore\n        /* \"#utility.yul\":1178:1212   */\n      0x4e6f20656e6f75676820746f6b656e2062616c616e636520746f207769746864\n        /* \"#utility.yul\":1158:1176   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1151:1213   */\n      mstore\n      shl(0xe8, 0x726177)\n        /* \"#utility.yul\":1229:1247   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1222:1255   */\n      mstore\n        /* \"#utility.yul\":1272:1291   */\n      0x84\n      add\n        /* \"token-bank.sol\":653:731  require(deposits[msg.sender] >= amount, \"No enough token balance to withdraw\") */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"token-bank.sol\":741:746  token */\n      sload(0x00)\n        /* \"token-bank.sol\":741:775  token.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"token-bank.sol\":756:766  msg.sender */\n      caller\n        /* \"token-bank.sol\":741:775  token.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1476:1527   */\n      mstore\n        /* \"#utility.yul\":1543:1561   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1536:1570   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank.sol\":741:746  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-bank.sol\":741:755  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1449:1467   */\n      0x44\n      add\n        /* \"token-bank.sol\":741:775  token.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"token-bank.sol\":794:804  msg.sender */\n      caller\n        /* \"token-bank.sol\":785:805  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank.sol\":785:793  deposits */\n      0x01\n        /* \"token-bank.sol\":785:805  deposits[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-bank.sol\":785:815  deposits[msg.sender] -= amount */\n      dup1\n      sload\n        /* \"token-bank.sol\":809:815  amount */\n      dup4\n      swap3\n        /* \"token-bank.sol\":785:805  deposits[msg.sender] */\n      swap1\n        /* \"token-bank.sol\":785:815  deposits[msg.sender] -= amount */\n      tag_34\n      swap1\n        /* \"token-bank.sol\":809:815  amount */\n      dup5\n      swap1\n        /* \"token-bank.sol\":785:815  deposits[msg.sender] -= amount */\n      tag_35\n      jump\t// in\n    tag_34:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"token-bank.sol\":602:822  function withdraw(uint256 amount) public {... */\n      jump\t// out\n        /* \"token-bank.sol\":336:596  function deposit(uint256 amount) public {... */\n    tag_13:\n        /* \"token-bank.sol\":404:409  token */\n      sload(0x00)\n        /* \"token-bank.sol\":404:446  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"token-bank.sol\":420:430  msg.sender */\n      caller\n        /* \"token-bank.sol\":404:446  token.allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2302:2353   */\n      mstore\n        /* \"token-bank.sol\":440:444  this */\n      address\n        /* \"#utility.yul\":2369:2387   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2362:2422   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank.sol\":404:409  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-bank.sol\":404:419  token.allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":2275:2293   */\n      0x44\n      add\n        /* \"token-bank.sol\":404:446  token.allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"token-bank.sol\":394:400  amount */\n      dup2\n        /* \"token-bank.sol\":394:446  amount <= token.allowance(msg.sender, address(this)) */\n      gt\n      iszero\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2806:2827   */\n      mstore\n        /* \"#utility.yul\":2863:2865   */\n      0x23\n        /* \"#utility.yul\":2843:2861   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2836:2866   */\n      mstore\n        /* \"#utility.yul\":2902:2936   */\n      0x4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f\n        /* \"#utility.yul\":2882:2900   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2875:2937   */\n      mstore\n      shl(0xea, 0x1cda5d)\n        /* \"#utility.yul\":2953:2971   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2946:2979   */\n      mstore\n        /* \"#utility.yul\":2996:3015   */\n      0x84\n      add\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n      tag_26\n        /* \"#utility.yul\":2622:3021   */\n      jump\n        /* \"token-bank.sol\":386:486  require(amount <= token.allowance(msg.sender, address(this)), \"No enough token approved to deposit\") */\n    tag_43:\n        /* \"token-bank.sol\":496:501  token */\n      sload(0x00)\n        /* \"token-bank.sol\":496:549  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"token-bank.sol\":515:525  msg.sender */\n      caller\n        /* \"token-bank.sol\":496:549  token.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3228:3279   */\n      mstore\n        /* \"token-bank.sol\":535:539  this */\n      address\n        /* \"#utility.yul\":3295:3313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3288:3348   */\n      mstore\n        /* \"#utility.yul\":3364:3382   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3357:3391   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token-bank.sol\":496:501  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-bank.sol\":496:514  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3201:3219   */\n      0x64\n      add\n        /* \"token-bank.sol\":496:549  token.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_50:\n      pop\n        /* \"token-bank.sol\":568:578  msg.sender */\n      caller\n        /* \"token-bank.sol\":559:579  deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-bank.sol\":559:567  deposits */\n      0x01\n        /* \"token-bank.sol\":559:579  deposits[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-bank.sol\":559:589  deposits[msg.sender] += amount */\n      dup1\n      sload\n        /* \"token-bank.sol\":583:589  amount */\n      dup4\n      swap3\n        /* \"token-bank.sol\":559:579  deposits[msg.sender] */\n      swap1\n        /* \"token-bank.sol\":559:589  deposits[msg.sender] += amount */\n      tag_34\n      swap1\n        /* \"token-bank.sol\":583:589  amount */\n      dup5\n      swap1\n        /* \"token-bank.sol\":559:589  deposits[msg.sender] += amount */\n      tag_52\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_9:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_56:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":425:711   */\n    tag_20:\n        /* \"#utility.yul\":484:490   */\n      0x00\n        /* \"#utility.yul\":537:539   */\n      0x20\n        /* \"#utility.yul\":525:534   */\n      dup3\n        /* \"#utility.yul\":516:523   */\n      dup5\n        /* \"#utility.yul\":512:535   */\n      sub\n        /* \"#utility.yul\":508:540   */\n      slt\n        /* \"#utility.yul\":505:557   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":553:554   */\n      0x00\n        /* \"#utility.yul\":550:551   */\n      dup1\n        /* \"#utility.yul\":543:555   */\n      revert\n        /* \"#utility.yul\":505:557   */\n    tag_59:\n        /* \"#utility.yul\":579:602   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":631:662   */\n      dup2\n      and\n        /* \"#utility.yul\":621:663   */\n      dup2\n      eq\n        /* \"#utility.yul\":611:681   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":674:675   */\n      dup1\n        /* \"#utility.yul\":667:679   */\n      revert\n        /* \"#utility.yul\":611:681   */\n    tag_60:\n        /* \"#utility.yul\":700:705   */\n      swap4\n        /* \"#utility.yul\":425:711   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1581:1858   */\n    tag_33:\n        /* \"#utility.yul\":1648:1654   */\n      0x00\n        /* \"#utility.yul\":1701:1703   */\n      0x20\n        /* \"#utility.yul\":1689:1698   */\n      dup3\n        /* \"#utility.yul\":1680:1687   */\n      dup5\n        /* \"#utility.yul\":1676:1699   */\n      sub\n        /* \"#utility.yul\":1672:1704   */\n      slt\n        /* \"#utility.yul\":1669:1721   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1714:1715   */\n      dup1\n        /* \"#utility.yul\":1707:1719   */\n      revert\n        /* \"#utility.yul\":1669:1721   */\n    tag_65:\n        /* \"#utility.yul\":1749:1758   */\n      dup2\n        /* \"#utility.yul\":1743:1759   */\n      mload\n        /* \"#utility.yul\":1802:1807   */\n      dup1\n        /* \"#utility.yul\":1795:1808   */\n      iszero\n        /* \"#utility.yul\":1788:1809   */\n      iszero\n        /* \"#utility.yul\":1781:1786   */\n      dup2\n        /* \"#utility.yul\":1778:1810   */\n      eq\n        /* \"#utility.yul\":1768:1828   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1824:1825   */\n      0x00\n        /* \"#utility.yul\":1821:1822   */\n      dup1\n        /* \"#utility.yul\":1814:1826   */\n      revert\n        /* \"#utility.yul\":1863:1990   */\n    tag_53:\n        /* \"#utility.yul\":1924:1934   */\n      0x4e487b71\n        /* \"#utility.yul\":1919:1922   */\n      0xe0\n        /* \"#utility.yul\":1915:1935   */\n      shl\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1936   */\n      mstore\n        /* \"#utility.yul\":1955:1959   */\n      0x11\n        /* \"#utility.yul\":1952:1953   */\n      0x04\n        /* \"#utility.yul\":1945:1960   */\n      mstore\n        /* \"#utility.yul\":1979:1983   */\n      0x24\n        /* \"#utility.yul\":1976:1977   */\n      0x00\n        /* \"#utility.yul\":1969:1984   */\n      revert\n        /* \"#utility.yul\":1995:2123   */\n    tag_35:\n        /* \"#utility.yul\":2062:2071   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2083:2094   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2080:2117   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2097:2115   */\n      tag_70\n      tag_53\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1995:2123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2617   */\n    tag_42:\n        /* \"#utility.yul\":2503:2509   */\n      0x00\n        /* \"#utility.yul\":2556:2558   */\n      0x20\n        /* \"#utility.yul\":2544:2553   */\n      dup3\n        /* \"#utility.yul\":2535:2542   */\n      dup5\n        /* \"#utility.yul\":2531:2554   */\n      sub\n        /* \"#utility.yul\":2527:2559   */\n      slt\n        /* \"#utility.yul\":2524:2576   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2569:2570   */\n      dup1\n        /* \"#utility.yul\":2562:2574   */\n      revert\n        /* \"#utility.yul\":2524:2576   */\n    tag_73:\n      pop\n        /* \"#utility.yul\":2595:2611   */\n      mload\n      swap2\n        /* \"#utility.yul\":2433:2617   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3527   */\n    tag_52:\n        /* \"#utility.yul\":3467:3476   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3488:3498   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3485:3521   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3501:3519   */\n      tag_70\n      tag_53\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220ccbc3658464ca5e2773bf16db40600766b8f059ad42b230149a15f9f821531e164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1106": {
									"entryPoint": null,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_TestToken_$1040_fromMemory": {
									"entryPoint": 78,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:324:9",
										"nodeType": "YulBlock",
										"src": "0:324:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:209:9",
													"nodeType": "YulBlock",
													"src": "113:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "159:16:9",
																"nodeType": "YulBlock",
																"src": "159:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "168:1:9",
																					"nodeType": "YulLiteral",
																					"src": "168:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "171:1:9",
																					"nodeType": "YulLiteral",
																					"src": "171:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "161:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "161:6:9"
																			},
																			"nativeSrc": "161:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "161:12:9"
																		},
																		"nativeSrc": "161:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "161:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "134:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "134:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "143:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "130:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "130:3:9"
																		},
																		"nativeSrc": "130:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "130:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "155:2:9",
																		"nodeType": "YulLiteral",
																		"src": "155:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "126:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "126:3:9"
																},
																"nativeSrc": "126:32:9",
																"nodeType": "YulFunctionCall",
																"src": "126:32:9"
															},
															"nativeSrc": "123:52:9",
															"nodeType": "YulIf",
															"src": "123:52:9"
														},
														{
															"nativeSrc": "184:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "184:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "203:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "203:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "197:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "197:5:9"
																},
																"nativeSrc": "197:16:9",
																"nodeType": "YulFunctionCall",
																"src": "197:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "188:5:9",
																	"nodeType": "YulTypedName",
																	"src": "188:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "276:16:9",
																"nodeType": "YulBlock",
																"src": "276:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "285:1:9",
																					"nodeType": "YulLiteral",
																					"src": "285:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "288:1:9",
																					"nodeType": "YulLiteral",
																					"src": "288:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "278:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "278:6:9"
																			},
																			"nativeSrc": "278:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "278:12:9"
																		},
																		"nativeSrc": "278:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "278:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "235:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "235:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "246:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "246:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "261:3:9",
																										"nodeType": "YulLiteral",
																										"src": "261:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "266:1:9",
																										"nodeType": "YulLiteral",
																										"src": "266:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "257:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "257:3:9"
																								},
																								"nativeSrc": "257:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "257:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "270:1:9",
																								"nodeType": "YulLiteral",
																								"src": "270:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "253:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "253:3:9"
																						},
																						"nativeSrc": "253:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "253:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "242:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "242:3:9"
																				},
																				"nativeSrc": "242:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "242:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "232:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "232:2:9"
																		},
																		"nativeSrc": "232:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "232:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "225:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:9"
																},
																"nativeSrc": "225:50:9",
																"nodeType": "YulFunctionCall",
																"src": "225:50:9"
															},
															"nativeSrc": "222:70:9",
															"nodeType": "YulIf",
															"src": "222:70:9"
														},
														{
															"nativeSrc": "301:15:9",
															"nodeType": "YulAssignment",
															"src": "301:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "311:5:9",
																"nodeType": "YulIdentifier",
																"src": "311:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "301:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_TestToken_$1040_fromMemory",
												"nativeSrc": "14:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "79:9:9",
														"nodeType": "YulTypedName",
														"src": "79:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "90:7:9",
														"nodeType": "YulTypedName",
														"src": "90:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "102:6:9",
														"nodeType": "YulTypedName",
														"src": "102:6:9",
														"type": ""
													}
												],
												"src": "14:308:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_TestToken_$1040_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506040516104af3803806104af833981016040819052602b91604e565b5f80546001600160a01b0319166001600160a01b03929092169190911790556079565b5f60208284031215605d575f80fd5b81516001600160a01b03811681146072575f80fd5b9392505050565b610429806100865f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632e1a7d4d1461004e578063b6b55f2514610063578063fc0c546a14610076578063fc7e286d146100a5575b5f80fd5b61006161005c366004610339565b6100d2565b005b610061610071366004610339565b6101d9565b5f54610088906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c46100b3366004610350565b60016020525f908152604090205481565b60405190815260200161009c565b335f908152600160205260409020548111156101415760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e2062616c616e636520746f20776974686460448201526272617760e81b60648201526084015b60405180910390fd5b5f5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561018e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101b2919061037d565b50335f90815260016020526040812080548392906101d19084906103b0565b909155505050565b5f54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610224573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024891906103c9565b8111156102a35760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f6044820152621cda5d60ea1b6064820152608401610138565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156102f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031a919061037d565b50335f90815260016020526040812080548392906101d19084906103e0565b5f60208284031215610349575f80fd5b5035919050565b5f60208284031215610360575f80fd5b81356001600160a01b0381168114610376575f80fd5b9392505050565b5f6020828403121561038d575f80fd5b81518015158114610376575f80fd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156103c3576103c361039c565b92915050565b5f602082840312156103d9575f80fd5b5051919050565b808201808211156103c3576103c361039c56fea2646970667358221220ccbc3658464ca5e2773bf16db40600766b8f059ad42b230149a15f9f821531e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4AF CODESIZE SUB DUP1 PUSH2 0x4AF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x4E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x79 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x5D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x72 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x429 DUP1 PUSH2 0x86 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFC7E286D EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x88 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x141 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E2062616C616E636520746F207769746864 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726177 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x37D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D1 SWAP1 DUP5 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x224 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E20617070726F76656420746F206465706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CDA5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x138 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x37D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D1 SWAP1 DUP5 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0x39C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xBC CALLDATASIZE PC CHAINID 0x4C 0xA5 0xE2 PUSH24 0x3BF16DB40600766B8F059AD42B230149A15F9F821531E164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "104:720:8:-:0;;;205:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;245:5;:14;;-1:-1:-1;;;;;;245:14:8;-1:-1:-1;;;;;245:14:8;;;;;;;;;;104:720;;14:308:9;102:6;155:2;143:9;134:7;130:23;126:32;123:52;;;171:1;168;161:12;123:52;197:16;;-1:-1:-1;;;;;242:31:9;;232:42;;222:70;;288:1;285;278:12;222:70;311:5;14:308;-1:-1:-1;;;14:308:9:o;:::-;104:720:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_1146": {
									"entryPoint": 473,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposits_1095": {
									"entryPoint": null,
									"id": 1095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1177": {
									"entryPoint": 210,
									"id": 1177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TestToken_$1040__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3529:9",
										"nodeType": "YulBlock",
										"src": "0:3529:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:9",
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:9",
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:9",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:9",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nativeSrc": "132:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nativeSrc": "132:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nativeSrc": "101:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:9",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nativeSrc": "97:32:9",
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nativeSrc": "94:52:9",
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nativeSrc": "155:33:9",
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nativeSrc": "165:23:9",
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:9",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:9",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:9",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nativeSrc": "318:102:9",
													"nodeType": "YulBlock",
													"src": "318:102:9",
													"statements": [
														{
															"nativeSrc": "328:26:9",
															"nodeType": "YulAssignment",
															"src": "328:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "340:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "340:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "351:2:9",
																		"nodeType": "YulLiteral",
																		"src": "351:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "336:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:3:9"
																},
																"nativeSrc": "336:18:9",
																"nodeType": "YulFunctionCall",
																"src": "336:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "328:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "328:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "370:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "385:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "385:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "401:3:9",
																								"nodeType": "YulLiteral",
																								"src": "401:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "406:1:9",
																								"nodeType": "YulLiteral",
																								"src": "406:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "397:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "397:3:9"
																						},
																						"nativeSrc": "397:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "397:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "410:1:9",
																						"nodeType": "YulLiteral",
																						"src": "410:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "393:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "393:3:9"
																				},
																				"nativeSrc": "393:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "393:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "381:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "381:3:9"
																		},
																		"nativeSrc": "381:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "381:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "363:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:9"
																},
																"nativeSrc": "363:51:9",
																"nodeType": "YulFunctionCall",
																"src": "363:51:9"
															},
															"nativeSrc": "363:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "363:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TestToken_$1040__to_t_address__fromStack_reversed",
												"nativeSrc": "199:221:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "287:9:9",
														"nodeType": "YulTypedName",
														"src": "287:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "298:6:9",
														"nodeType": "YulTypedName",
														"src": "298:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "309:4:9",
														"nodeType": "YulTypedName",
														"src": "309:4:9",
														"type": ""
													}
												],
												"src": "199:221:9"
											},
											{
												"body": {
													"nativeSrc": "495:216:9",
													"nodeType": "YulBlock",
													"src": "495:216:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "541:16:9",
																"nodeType": "YulBlock",
																"src": "541:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "550:1:9",
																					"nodeType": "YulLiteral",
																					"src": "550:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "553:1:9",
																					"nodeType": "YulLiteral",
																					"src": "553:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "543:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:9"
																			},
																			"nativeSrc": "543:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "543:12:9"
																		},
																		"nativeSrc": "543:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "543:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "516:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "525:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "525:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "512:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:9"
																		},
																		"nativeSrc": "512:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "512:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "537:2:9",
																		"nodeType": "YulLiteral",
																		"src": "537:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "508:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:9"
																},
																"nativeSrc": "508:32:9",
																"nodeType": "YulFunctionCall",
																"src": "508:32:9"
															},
															"nativeSrc": "505:52:9",
															"nodeType": "YulIf",
															"src": "505:52:9"
														},
														{
															"nativeSrc": "566:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "566:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "592:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "592:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "579:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "579:12:9"
																},
																"nativeSrc": "579:23:9",
																"nodeType": "YulFunctionCall",
																"src": "579:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "570:5:9",
																	"nodeType": "YulTypedName",
																	"src": "570:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "665:16:9",
																"nodeType": "YulBlock",
																"src": "665:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "674:1:9",
																					"nodeType": "YulLiteral",
																					"src": "674:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:9"
																			},
																			"nativeSrc": "667:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "667:12:9"
																		},
																		"nativeSrc": "667:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "667:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "624:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "624:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "635:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "635:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "650:3:9",
																										"nodeType": "YulLiteral",
																										"src": "650:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "655:1:9",
																										"nodeType": "YulLiteral",
																										"src": "655:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "646:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "646:3:9"
																								},
																								"nativeSrc": "646:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "646:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "659:1:9",
																								"nodeType": "YulLiteral",
																								"src": "659:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "642:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "642:3:9"
																						},
																						"nativeSrc": "642:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "642:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "631:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:9"
																				},
																				"nativeSrc": "631:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "631:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "621:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "621:2:9"
																		},
																		"nativeSrc": "621:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "621:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "614:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "614:6:9"
																},
																"nativeSrc": "614:50:9",
																"nodeType": "YulFunctionCall",
																"src": "614:50:9"
															},
															"nativeSrc": "611:70:9",
															"nodeType": "YulIf",
															"src": "611:70:9"
														},
														{
															"nativeSrc": "690:15:9",
															"nodeType": "YulAssignment",
															"src": "690:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "700:5:9",
																"nodeType": "YulIdentifier",
																"src": "700:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "690:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "425:286:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "461:9:9",
														"nodeType": "YulTypedName",
														"src": "461:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "472:7:9",
														"nodeType": "YulTypedName",
														"src": "472:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "484:6:9",
														"nodeType": "YulTypedName",
														"src": "484:6:9",
														"type": ""
													}
												],
												"src": "425:286:9"
											},
											{
												"body": {
													"nativeSrc": "817:76:9",
													"nodeType": "YulBlock",
													"src": "817:76:9",
													"statements": [
														{
															"nativeSrc": "827:26:9",
															"nodeType": "YulAssignment",
															"src": "827:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "839:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "850:2:9",
																		"nodeType": "YulLiteral",
																		"src": "850:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "835:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:9"
																},
																"nativeSrc": "835:18:9",
																"nodeType": "YulFunctionCall",
																"src": "835:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "827:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "869:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "880:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "880:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:9"
																},
																"nativeSrc": "862:25:9",
																"nodeType": "YulFunctionCall",
																"src": "862:25:9"
															},
															"nativeSrc": "862:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "862:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "716:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "786:9:9",
														"nodeType": "YulTypedName",
														"src": "786:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "797:6:9",
														"nodeType": "YulTypedName",
														"src": "797:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "808:4:9",
														"nodeType": "YulTypedName",
														"src": "808:4:9",
														"type": ""
													}
												],
												"src": "716:177:9"
											},
											{
												"body": {
													"nativeSrc": "1072:225:9",
													"nodeType": "YulBlock",
													"src": "1072:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1089:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1089:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1082:6:9"
																},
																"nativeSrc": "1082:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1082:21:9"
															},
															"nativeSrc": "1082:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1082:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1134:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1134:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1119:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:9"
																		},
																		"nativeSrc": "1119:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1119:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1139:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1139:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1112:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:9"
																},
																"nativeSrc": "1112:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1112:30:9"
															},
															"nativeSrc": "1112:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1112:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1162:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1162:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1173:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1173:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1158:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:9"
																		},
																		"nativeSrc": "1158:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1158:18:9"
																	},
																	{
																		"hexValue": "4e6f20656e6f75676820746f6b656e2062616c616e636520746f207769746864",
																		"kind": "string",
																		"nativeSrc": "1178:34:9",
																		"nodeType": "YulLiteral",
																		"src": "1178:34:9",
																		"type": "",
																		"value": "No enough token balance to withd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1151:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:6:9"
																},
																"nativeSrc": "1151:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:62:9"
															},
															"nativeSrc": "1151:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "1151:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1244:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1244:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1229:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:9"
																		},
																		"nativeSrc": "1229:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1229:18:9"
																	},
																	{
																		"hexValue": "726177",
																		"kind": "string",
																		"nativeSrc": "1249:5:9",
																		"nodeType": "YulLiteral",
																		"src": "1249:5:9",
																		"type": "",
																		"value": "raw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1222:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:6:9"
																},
																"nativeSrc": "1222:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:33:9"
															},
															"nativeSrc": "1222:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1222:33:9"
														},
														{
															"nativeSrc": "1264:27:9",
															"nodeType": "YulAssignment",
															"src": "1264:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1276:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1287:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1287:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:9"
																},
																"nativeSrc": "1272:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1272:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1264:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1264:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "898:399:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1049:9:9",
														"nodeType": "YulTypedName",
														"src": "1049:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1063:4:9",
														"nodeType": "YulTypedName",
														"src": "1063:4:9",
														"type": ""
													}
												],
												"src": "898:399:9"
											},
											{
												"body": {
													"nativeSrc": "1431:145:9",
													"nodeType": "YulBlock",
													"src": "1431:145:9",
													"statements": [
														{
															"nativeSrc": "1441:26:9",
															"nodeType": "YulAssignment",
															"src": "1441:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1453:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1464:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1464:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1449:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1449:3:9"
																},
																"nativeSrc": "1449:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1449:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1441:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1441:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1483:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1483:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1498:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1498:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1514:3:9",
																								"nodeType": "YulLiteral",
																								"src": "1514:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1519:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1519:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1510:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1510:3:9"
																						},
																						"nativeSrc": "1510:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1510:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1523:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1523:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1506:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1506:3:9"
																				},
																				"nativeSrc": "1506:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1506:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1494:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1494:3:9"
																		},
																		"nativeSrc": "1494:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1494:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1476:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1476:6:9"
																},
																"nativeSrc": "1476:51:9",
																"nodeType": "YulFunctionCall",
																"src": "1476:51:9"
															},
															"nativeSrc": "1476:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "1476:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1547:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1547:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1558:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1558:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1543:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:9"
																		},
																		"nativeSrc": "1543:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1563:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1536:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:9"
																},
																"nativeSrc": "1536:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1536:34:9"
															},
															"nativeSrc": "1536:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1536:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1302:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1392:9:9",
														"nodeType": "YulTypedName",
														"src": "1392:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1403:6:9",
														"nodeType": "YulTypedName",
														"src": "1403:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1411:6:9",
														"nodeType": "YulTypedName",
														"src": "1411:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1422:4:9",
														"nodeType": "YulTypedName",
														"src": "1422:4:9",
														"type": ""
													}
												],
												"src": "1302:274:9"
											},
											{
												"body": {
													"nativeSrc": "1659:199:9",
													"nodeType": "YulBlock",
													"src": "1659:199:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1705:16:9",
																"nodeType": "YulBlock",
																"src": "1705:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1714:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1714:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1717:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1707:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:9"
																			},
																			"nativeSrc": "1707:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1707:12:9"
																		},
																		"nativeSrc": "1707:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1707:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1680:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1680:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1689:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1689:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1676:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:9"
																		},
																		"nativeSrc": "1676:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1701:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1701:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1672:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:9"
																},
																"nativeSrc": "1672:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1672:32:9"
															},
															"nativeSrc": "1669:52:9",
															"nodeType": "YulIf",
															"src": "1669:52:9"
														},
														{
															"nativeSrc": "1730:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1730:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1749:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1743:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1743:5:9"
																},
																"nativeSrc": "1743:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1743:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1734:5:9",
																	"nodeType": "YulTypedName",
																	"src": "1734:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1812:16:9",
																"nodeType": "YulBlock",
																"src": "1812:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1821:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1821:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1824:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1824:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1814:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1814:6:9"
																			},
																			"nativeSrc": "1814:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:12:9"
																		},
																		"nativeSrc": "1814:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1781:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1781:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1802:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "1802:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1795:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "1795:6:9"
																						},
																						"nativeSrc": "1795:13:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1795:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1788:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1788:6:9"
																				},
																				"nativeSrc": "1788:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1788:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1778:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1778:2:9"
																		},
																		"nativeSrc": "1778:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1771:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:9"
																},
																"nativeSrc": "1771:40:9",
																"nodeType": "YulFunctionCall",
																"src": "1771:40:9"
															},
															"nativeSrc": "1768:60:9",
															"nodeType": "YulIf",
															"src": "1768:60:9"
														},
														{
															"nativeSrc": "1837:15:9",
															"nodeType": "YulAssignment",
															"src": "1837:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "1847:5:9",
																"nodeType": "YulIdentifier",
																"src": "1847:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1837:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "1581:277:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1625:9:9",
														"nodeType": "YulTypedName",
														"src": "1625:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1636:7:9",
														"nodeType": "YulTypedName",
														"src": "1636:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1648:6:9",
														"nodeType": "YulTypedName",
														"src": "1648:6:9",
														"type": ""
													}
												],
												"src": "1581:277:9"
											},
											{
												"body": {
													"nativeSrc": "1895:95:9",
													"nodeType": "YulBlock",
													"src": "1895:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1912:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1919:3:9",
																				"nodeType": "YulLiteral",
																				"src": "1919:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1924:10:9",
																				"nodeType": "YulLiteral",
																				"src": "1924:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1915:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1915:3:9"
																		},
																		"nativeSrc": "1915:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1915:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:9"
																},
																"nativeSrc": "1905:31:9",
																"nodeType": "YulFunctionCall",
																"src": "1905:31:9"
															},
															"nativeSrc": "1905:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "1905:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1952:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1952:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1955:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1945:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:9"
																},
																"nativeSrc": "1945:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1945:15:9"
															},
															"nativeSrc": "1945:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1945:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1976:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1976:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1979:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1979:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1969:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:9"
																},
																"nativeSrc": "1969:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1969:15:9"
															},
															"nativeSrc": "1969:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1969:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1863:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1863:127:9"
											},
											{
												"body": {
													"nativeSrc": "2044:79:9",
													"nodeType": "YulBlock",
													"src": "2044:79:9",
													"statements": [
														{
															"nativeSrc": "2054:17:9",
															"nodeType": "YulAssignment",
															"src": "2054:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2066:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2066:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2069:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2062:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2062:3:9"
																},
																"nativeSrc": "2062:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2062:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2054:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2054:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2095:22:9",
																"nodeType": "YulBlock",
																"src": "2095:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2097:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2097:16:9"
																			},
																			"nativeSrc": "2097:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2097:18:9"
																		},
																		"nativeSrc": "2097:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2097:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2086:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2086:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2092:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2092:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2083:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2083:2:9"
																},
																"nativeSrc": "2083:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2083:11:9"
															},
															"nativeSrc": "2080:37:9",
															"nodeType": "YulIf",
															"src": "2080:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1995:128:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2026:1:9",
														"nodeType": "YulTypedName",
														"src": "2026:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2029:1:9",
														"nodeType": "YulTypedName",
														"src": "2029:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2035:4:9",
														"nodeType": "YulTypedName",
														"src": "2035:4:9",
														"type": ""
													}
												],
												"src": "1995:128:9"
											},
											{
												"body": {
													"nativeSrc": "2257:171:9",
													"nodeType": "YulBlock",
													"src": "2257:171:9",
													"statements": [
														{
															"nativeSrc": "2267:26:9",
															"nodeType": "YulAssignment",
															"src": "2267:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2279:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2279:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2290:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:9"
																},
																"nativeSrc": "2275:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2275:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2267:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2267:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2309:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2309:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2324:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2324:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2340:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2340:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2345:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2345:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2336:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2336:3:9"
																						},
																						"nativeSrc": "2336:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2336:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2349:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2349:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2332:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2332:3:9"
																				},
																				"nativeSrc": "2332:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2332:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2320:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:9"
																		},
																		"nativeSrc": "2320:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2320:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2302:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2302:6:9"
																},
																"nativeSrc": "2302:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2302:51:9"
															},
															"nativeSrc": "2302:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2302:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2373:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2373:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2384:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2384:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2369:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:9"
																		},
																		"nativeSrc": "2369:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2369:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "2393:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2393:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2409:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2409:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2414:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2414:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2405:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2405:3:9"
																						},
																						"nativeSrc": "2405:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2405:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2418:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2418:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2401:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2401:3:9"
																				},
																				"nativeSrc": "2401:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2401:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2389:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:9"
																		},
																		"nativeSrc": "2389:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:9"
																},
																"nativeSrc": "2362:60:9",
																"nodeType": "YulFunctionCall",
																"src": "2362:60:9"
															},
															"nativeSrc": "2362:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "2362:60:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2128:300:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2218:9:9",
														"nodeType": "YulTypedName",
														"src": "2218:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2229:6:9",
														"nodeType": "YulTypedName",
														"src": "2229:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2237:6:9",
														"nodeType": "YulTypedName",
														"src": "2237:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2248:4:9",
														"nodeType": "YulTypedName",
														"src": "2248:4:9",
														"type": ""
													}
												],
												"src": "2128:300:9"
											},
											{
												"body": {
													"nativeSrc": "2514:103:9",
													"nodeType": "YulBlock",
													"src": "2514:103:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2560:16:9",
																"nodeType": "YulBlock",
																"src": "2560:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2569:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2569:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2572:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2562:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2562:6:9"
																			},
																			"nativeSrc": "2562:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2562:12:9"
																		},
																		"nativeSrc": "2562:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2562:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2535:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2535:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2544:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2544:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2531:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2531:3:9"
																		},
																		"nativeSrc": "2531:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2531:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2556:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2556:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2527:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:9"
																},
																"nativeSrc": "2527:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2527:32:9"
															},
															"nativeSrc": "2524:52:9",
															"nodeType": "YulIf",
															"src": "2524:52:9"
														},
														{
															"nativeSrc": "2585:26:9",
															"nodeType": "YulAssignment",
															"src": "2585:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2601:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2595:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2595:5:9"
																},
																"nativeSrc": "2595:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2595:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2585:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "2433:184:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2480:9:9",
														"nodeType": "YulTypedName",
														"src": "2480:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2491:7:9",
														"nodeType": "YulTypedName",
														"src": "2491:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2503:6:9",
														"nodeType": "YulTypedName",
														"src": "2503:6:9",
														"type": ""
													}
												],
												"src": "2433:184:9"
											},
											{
												"body": {
													"nativeSrc": "2796:225:9",
													"nodeType": "YulBlock",
													"src": "2796:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2813:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2813:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2824:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2806:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:9"
																},
																"nativeSrc": "2806:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2806:21:9"
															},
															"nativeSrc": "2806:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2806:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2847:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2847:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2858:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2858:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2843:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:9"
																		},
																		"nativeSrc": "2843:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2843:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2863:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2863:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2836:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:9"
																},
																"nativeSrc": "2836:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2836:30:9"
															},
															"nativeSrc": "2836:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2836:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2886:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2886:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2897:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2897:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2882:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:9"
																		},
																		"nativeSrc": "2882:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2882:18:9"
																	},
																	{
																		"hexValue": "4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f",
																		"kind": "string",
																		"nativeSrc": "2902:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2902:34:9",
																		"type": "",
																		"value": "No enough token approved to depo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2875:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:9"
																},
																"nativeSrc": "2875:62:9",
																"nodeType": "YulFunctionCall",
																"src": "2875:62:9"
															},
															"nativeSrc": "2875:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "2875:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2957:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2957:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2968:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2968:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2953:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:9"
																		},
																		"nativeSrc": "2953:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2953:18:9"
																	},
																	{
																		"hexValue": "736974",
																		"kind": "string",
																		"nativeSrc": "2973:5:9",
																		"nodeType": "YulLiteral",
																		"src": "2973:5:9",
																		"type": "",
																		"value": "sit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2946:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:9"
																},
																"nativeSrc": "2946:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2946:33:9"
															},
															"nativeSrc": "2946:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2946:33:9"
														},
														{
															"nativeSrc": "2988:27:9",
															"nodeType": "YulAssignment",
															"src": "2988:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3000:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3000:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3011:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3011:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2996:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:9"
																},
																"nativeSrc": "2996:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2996:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2988:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2988:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2622:399:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2773:9:9",
														"nodeType": "YulTypedName",
														"src": "2773:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2787:4:9",
														"nodeType": "YulTypedName",
														"src": "2787:4:9",
														"type": ""
													}
												],
												"src": "2622:399:9"
											},
											{
												"body": {
													"nativeSrc": "3183:214:9",
													"nodeType": "YulBlock",
													"src": "3183:214:9",
													"statements": [
														{
															"nativeSrc": "3193:26:9",
															"nodeType": "YulAssignment",
															"src": "3193:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3205:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3205:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3216:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3216:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3201:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:9"
																},
																"nativeSrc": "3201:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3201:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3193:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3193:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3235:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3235:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3250:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3250:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3266:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3266:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3271:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3271:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3262:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3262:3:9"
																						},
																						"nativeSrc": "3262:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3262:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3275:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3275:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3258:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3258:3:9"
																				},
																				"nativeSrc": "3258:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3258:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3246:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:9"
																		},
																		"nativeSrc": "3246:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3246:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3228:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3228:6:9"
																},
																"nativeSrc": "3228:51:9",
																"nodeType": "YulFunctionCall",
																"src": "3228:51:9"
															},
															"nativeSrc": "3228:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "3228:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3299:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3310:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3310:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3295:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3295:3:9"
																		},
																		"nativeSrc": "3295:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3319:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3319:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3335:3:9",
																								"nodeType": "YulLiteral",
																								"src": "3335:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3340:1:9",
																								"nodeType": "YulLiteral",
																								"src": "3340:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3331:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3331:3:9"
																						},
																						"nativeSrc": "3331:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3331:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3344:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3344:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3327:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3327:3:9"
																				},
																				"nativeSrc": "3327:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3327:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3315:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:9"
																		},
																		"nativeSrc": "3315:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3315:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3288:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:9"
																},
																"nativeSrc": "3288:60:9",
																"nodeType": "YulFunctionCall",
																"src": "3288:60:9"
															},
															"nativeSrc": "3288:60:9",
															"nodeType": "YulExpressionStatement",
															"src": "3288:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3368:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3368:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3379:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3379:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3364:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:9"
																		},
																		"nativeSrc": "3364:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3364:18:9"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3384:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3384:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3357:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:9"
																},
																"nativeSrc": "3357:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3357:34:9"
															},
															"nativeSrc": "3357:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3357:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3026:371:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3136:9:9",
														"nodeType": "YulTypedName",
														"src": "3136:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3147:6:9",
														"nodeType": "YulTypedName",
														"src": "3147:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3155:6:9",
														"nodeType": "YulTypedName",
														"src": "3155:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3163:6:9",
														"nodeType": "YulTypedName",
														"src": "3163:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3174:4:9",
														"nodeType": "YulTypedName",
														"src": "3174:4:9",
														"type": ""
													}
												],
												"src": "3026:371:9"
											},
											{
												"body": {
													"nativeSrc": "3450:77:9",
													"nodeType": "YulBlock",
													"src": "3450:77:9",
													"statements": [
														{
															"nativeSrc": "3460:16:9",
															"nodeType": "YulAssignment",
															"src": "3460:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3471:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3471:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3474:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3474:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3467:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:9"
																},
																"nativeSrc": "3467:9:9",
																"nodeType": "YulFunctionCall",
																"src": "3467:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3460:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3460:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3499:22:9",
																"nodeType": "YulBlock",
																"src": "3499:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3501:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3501:16:9"
																			},
																			"nativeSrc": "3501:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3501:18:9"
																		},
																		"nativeSrc": "3501:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3501:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3491:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "3491:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3494:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3494:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3488:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3488:2:9"
																},
																"nativeSrc": "3488:10:9",
																"nodeType": "YulFunctionCall",
																"src": "3488:10:9"
															},
															"nativeSrc": "3485:36:9",
															"nodeType": "YulIf",
															"src": "3485:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3402:125:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3433:1:9",
														"nodeType": "YulTypedName",
														"src": "3433:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3436:1:9",
														"nodeType": "YulTypedName",
														"src": "3436:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3442:3:9",
														"nodeType": "YulTypedName",
														"src": "3442:3:9",
														"type": ""
													}
												],
												"src": "3402:125:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_TestToken_$1040__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"No enough token balance to withd\")\n        mstore(add(headStart, 96), \"raw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"No enough token approved to depo\")\n        mstore(add(headStart, 96), \"sit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c80632e1a7d4d1461004e578063b6b55f2514610063578063fc0c546a14610076578063fc7e286d146100a5575b5f80fd5b61006161005c366004610339565b6100d2565b005b610061610071366004610339565b6101d9565b5f54610088906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c46100b3366004610350565b60016020525f908152604090205481565b60405190815260200161009c565b335f908152600160205260409020548111156101415760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e2062616c616e636520746f20776974686460448201526272617760e81b60648201526084015b60405180910390fd5b5f5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561018e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101b2919061037d565b50335f90815260016020526040812080548392906101d19084906103b0565b909155505050565b5f54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa158015610224573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024891906103c9565b8111156102a35760405162461bcd60e51b815260206004820152602360248201527f4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f6044820152621cda5d60ea1b6064820152608401610138565b5f546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156102f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061031a919061037d565b50335f90815260016020526040812080548392906101d19084906103e0565b5f60208284031215610349575f80fd5b5035919050565b5f60208284031215610360575f80fd5b81356001600160a01b0381168114610376575f80fd5b9392505050565b5f6020828403121561038d575f80fd5b81518015158114610376575f80fd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156103c3576103c361039c565b92915050565b5f602082840312156103d9575f80fd5b5051919050565b808201808211156103c3576103c361039c56fea2646970667358221220ccbc3658464ca5e2773bf16db40600766b8f059ad42b230149a15f9f821531e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xFC7E286D EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0xD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x88 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x141 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E2062616C616E636520746F207769746864 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x726177 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x37D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D1 SWAP1 DUP5 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x224 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20656E6F75676820746F6B656E20617070726F76656420746F206465706F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CDA5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x138 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x37D JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1D1 SWAP1 DUP5 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0x39C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C3 PUSH2 0x39C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xBC CALLDATASIZE PC CHAINID 0x4C 0xA5 0xE2 PUSH24 0x3BF16DB40600766B8F059AD42B230149A15F9F821531E164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "104:720:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;602:220;;;;;;:::i;:::-;;:::i;:::-;;336:260;;;;;;:::i;:::-;;:::i;130:22::-;;;;;-1:-1:-1;;;;;130:22:8;;;;;;-1:-1:-1;;;;;381:32:9;;;363:51;;351:2;336:18;130:22:8;;;;;;;;158:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;862:25:9;;;850:2;835:18;158:40:8;716:177:9;602:220:8;670:10;661:20;;;;:8;:20;;;;;;:30;-1:-1:-1;661:30:8;653:78;;;;-1:-1:-1;;;653:78:8;;1100:2:9;653:78:8;;;1082:21:9;1139:2;1119:18;;;1112:30;1178:34;1158:18;;;1151:62;-1:-1:-1;;;1229:18:9;;;1222:33;1272:19;;653:78:8;;;;;;;;;741:5;;:34;;-1:-1:-1;;;741:34:8;;756:10;741:34;;;1476:51:9;1543:18;;;1536:34;;;-1:-1:-1;;;;;741:5:8;;;;:14;;1449:18:9;;741:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;794:10:8;785:20;;;;:8;:20;;;;;:30;;809:6;;785:20;:30;;809:6;;785:30;:::i;:::-;;;;-1:-1:-1;;;602:220:8:o;336:260::-;404:5;;:42;;-1:-1:-1;;;404:42:8;;420:10;404:42;;;2302:51:9;440:4:8;2369:18:9;;;2362:60;-1:-1:-1;;;;;404:5:8;;;;:15;;2275:18:9;;404:42:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;394:6;:52;;386:100;;;;-1:-1:-1;;;386:100:8;;2824:2:9;386:100:8;;;2806:21:9;2863:2;2843:18;;;2836:30;2902:34;2882:18;;;2875:62;-1:-1:-1;;;2953:18:9;;;2946:33;2996:19;;386:100:8;2622:399:9;386:100:8;496:5;;:53;;-1:-1:-1;;;496:53:8;;515:10;496:53;;;3228:51:9;535:4:8;3295:18:9;;;3288:60;3364:18;;;3357:34;;;-1:-1:-1;;;;;496:5:8;;;;:18;;3201::9;;496:53:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;568:10:8;559:20;;;;:8;:20;;;;;:30;;583:6;;559:20;:30;;583:6;;559:30;:::i;14:180:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;425:286::-;484:6;537:2;525:9;516:7;512:23;508:32;505:52;;;553:1;550;543:12;505:52;579:23;;-1:-1:-1;;;;;631:31:9;;621:42;;611:70;;677:1;674;667:12;611:70;700:5;425:286;-1:-1:-1;;;425:286:9:o;1581:277::-;1648:6;1701:2;1689:9;1680:7;1676:23;1672:32;1669:52;;;1717:1;1714;1707:12;1669:52;1749:9;1743:16;1802:5;1795:13;1788:21;1781:5;1778:32;1768:60;;1824:1;1821;1814:12;1863:127;1924:10;1919:3;1915:20;1912:1;1905:31;1955:4;1952:1;1945:15;1979:4;1976:1;1969:15;1995:128;2062:9;;;2083:11;;;2080:37;;;2097:18;;:::i;:::-;1995:128;;;;:::o;2433:184::-;2503:6;2556:2;2544:9;2535:7;2531:23;2527:32;2524:52;;;2572:1;2569;2562:12;2524:52;-1:-1:-1;2595:16:9;;2433:184;-1:-1:-1;2433:184:9:o;3402:125::-;3467:9;;;3488:10;;;3485:36;;;3501:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "213000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(uint256)": "infinite",
								"deposits(address)": "2525",
								"token()": "2346",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 205,
									"end": 266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 205,
									"end": 266,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 205,
									"end": 266,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 245,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 259,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 245,
									"end": 259,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 245,
									"end": 259,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 322,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 322,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 102,
									"end": 108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 155,
									"end": 157,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 143,
									"end": 152,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 134,
									"end": 141,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 130,
									"end": 153,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 126,
									"end": 158,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 123,
									"end": 175,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 123,
									"end": 175,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 123,
									"end": 175,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 171,
									"end": 172,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 169,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 161,
									"end": 173,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 123,
									"end": 175,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 123,
									"end": 175,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 213,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 197,
									"end": 213,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 242,
									"end": 273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 242,
									"end": 273,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 232,
									"end": 274,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 232,
									"end": 274,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 222,
									"end": 292,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 222,
									"end": 292,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 288,
									"end": 289,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 278,
									"end": 290,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 222,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 222,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 311,
									"end": 316,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 322,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 322,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 322,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 322,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 104,
									"end": 824,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 824,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ccbc3658464ca5e2773bf16db40600766b8f059ad42b230149a15f9f821531e164736f6c634300081a0033",
									".code": [
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "2E1A7D4D"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "B6B55F25"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "FC0C546A"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "FC7E286D"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 824,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 104,
											"end": 824,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 602,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 602,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 602,
											"end": 822,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 336,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 336,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 130,
											"end": 152,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 381,
											"end": 413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 413,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 363,
											"end": 414,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 363,
											"end": 414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 351,
											"end": 353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 336,
											"end": 354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 130,
											"end": 152,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 152,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 130,
											"end": 152,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 158,
											"end": 198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 158,
											"end": 198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 862,
											"end": 887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 862,
											"end": 887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 862,
											"end": 887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 850,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 158,
											"end": 198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 716,
											"end": 893,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 602,
											"end": 822,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 602,
											"end": 822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 670,
											"end": 680,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 661,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 661,
											"end": 681,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 661,
											"end": 691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 661,
											"end": 691,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 653,
											"end": 731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1212,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20656E6F75676820746F6B656E2062616C616E636520746F207769746864"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1158,
											"end": 1176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1213,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1229,
											"end": 1247,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1291,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1272,
											"end": 1291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 653,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 653,
											"end": 731,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 653,
											"end": 731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 756,
											"end": 766,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1527,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1570,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1536,
											"end": 1570,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 741,
											"end": 746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 741,
											"end": 755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1449,
											"end": 1467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 741,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 741,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 804,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 785,
											"end": 793,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 785,
											"end": 805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 809,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 785,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 785,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 785,
											"end": 815,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 602,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 596,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 336,
											"end": 596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 420,
											"end": 430,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2302,
											"end": 2353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 440,
											"end": 444,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 404,
											"end": 409,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 419,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 404,
											"end": 419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2293,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2275,
											"end": 2293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 404,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 404,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 404,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 394,
											"end": 446,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 394,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 386,
											"end": 486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 386,
											"end": 486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2827,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2866,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2902,
											"end": 2936,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20656E6F75676820746F6B656E20617070726F76656420746F206465706F"
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2937,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2996,
											"end": 3015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 386,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2622,
											"end": 3021,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 386,
											"end": 486,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 386,
											"end": 486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 525,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 535,
											"end": 539,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3288,
											"end": 3348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3391,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 496,
											"end": 501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 514,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 496,
											"end": 514,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 496,
											"end": 549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 496,
											"end": 549,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 496,
											"end": 549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 568,
											"end": 578,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 567,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 559,
											"end": 579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 559,
											"end": 589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 583,
											"end": 589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 559,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 425,
											"end": 711,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 484,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 516,
											"end": 523,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 512,
											"end": 535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 505,
											"end": 557,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 505,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 505,
											"end": 557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 551,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 543,
											"end": 555,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 505,
											"end": 557,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 505,
											"end": 557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 579,
											"end": 602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 579,
											"end": 602,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 631,
											"end": 662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 662,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 621,
											"end": 663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 621,
											"end": 663,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 611,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 611,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 675,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 667,
											"end": 679,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 611,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 611,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 700,
											"end": 705,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 425,
											"end": 711,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 425,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1858,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1581,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1676,
											"end": 1699,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1704,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1669,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1759,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1768,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1768,
											"end": 1828,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1825,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1826,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1990,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1863,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1936,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1952,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1984,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2123,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1995,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2117,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2080,
											"end": 2117,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2097,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2123,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2617,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2433,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2535,
											"end": 2542,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2554,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2559,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2576,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2524,
											"end": 2576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2524,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2524,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2611,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2611,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3527,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3402,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3498,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3498,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3485,
											"end": 3521,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3485,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3485,
											"end": 3521,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3501,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3501,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"test-token.sol",
								"token-bank-v2.sol",
								"token-bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25",
							"deposits(address)": "fc7e286d",
							"token()": "fc0c546a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract TestToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TestToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-bank.sol\":\"TokenBank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"test-token.sol\":{\"keccak256\":\"0x1432c29b792ada1a2ece29d926691b568c5ee819bf2545fbf985553d27f41ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e9d4a47cd1f202c98a824659cfd736699fd009658c13784deb039da8e09569b\",\"dweb:/ipfs/QmZUAzsPYGNFwxFZPVnoYoRWt38SYZAyCfxwh9fhrhxudD\"]},\"token-bank.sol\":{\"keccak256\":\"0x3518fcbdcc63af88dcfdfa07fb50f65c182f1a81a40fae966ef14f784edbfb16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66d0775802e995e51ceae38c17f7c0de848d55b6aa3cfa74c8b0241d09ffe4ca\",\"dweb:/ipfs/QmW4UaUuU9MQpYisid2o2gT75bB5konTHAKVgN3BxnAKai\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1091,
								"contract": "token-bank.sol:TokenBank",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(TestToken)1040"
							},
							{
								"astId": 1095,
								"contract": "token-bank.sol:TokenBank",
								"label": "deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(TestToken)1040": {
								"encoding": "inplace",
								"label": "contract TestToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"test-token.sol": {
				"ast": {
					"absolutePath": "test-token.sol",
					"exportedSymbols": {
						"Address": [
							956
						],
						"ERC20": [
							799
						],
						"FailedToCallTokenReceivedHook": [
							958
						],
						"Ownable": [
							147
						],
						"TestToken": [
							1040
						]
					},
					"id": 1041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 800,
							"src": "107:70:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "116:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1041,
							"sourceUnit": 148,
							"src": "178:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "187:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 956,
							"linearizedBaseContracts": [
								956
							],
							"name": "Address",
							"nameLocation": "257:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "334:101:6",
										"statements": [
											{
												"assignments": [
													947
												],
												"declarations": [
													{
														"constant": false,
														"id": 947,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "352:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "344:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "344:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"nodeType": "VariableDeclarationStatement",
												"src": "344:12:6"
											},
											{
												"AST": {
													"nativeSrc": "375:29:6",
													"nodeType": "YulBlock",
													"src": "375:29:6",
													"statements": [
														{
															"nativeSrc": "377:25:6",
															"nodeType": "YulAssignment",
															"src": "377:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "397:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "397:4:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "385:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "385:11:6"
																},
																"nativeSrc": "385:17:6",
																"nodeType": "YulFunctionCall",
																"src": "385:17:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "377:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "377:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 941,
														"isOffset": false,
														"isSlot": false,
														"src": "397:4:6",
														"valueSize": 1
													},
													{
														"declaration": 947,
														"isOffset": false,
														"isSlot": false,
														"src": "377:4:6",
														"valueSize": 1
													}
												],
												"id": 949,
												"nodeType": "InlineAssembly",
												"src": "366:38:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "420:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "427:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "420:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 945,
												"id": 953,
												"nodeType": "Return",
												"src": "413:15:6"
											}
										]
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "280:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "299:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "291:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:14:6"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "328:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "328:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:6:6"
									},
									"scope": 956,
									"src": "271:164:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1041,
							"src": "249:188:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"errorSelector": "1f348e38",
							"id": 958,
							"name": "FailedToCallTokenReceivedHook",
							"nameLocation": "445:29:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 957,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "474:2:6"
							},
							"src": "439:38:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "ERC20",
										"nameLocations": [
											"501:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "501:5:6"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "501:5:6"
								},
								{
									"baseName": {
										"id": 961,
										"name": "Ownable",
										"nameLocations": [
											"508:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "508:7:6"
									},
									"id": 962,
									"nodeType": "InheritanceSpecifier",
									"src": "508:7:6"
								}
							],
							"canonicalName": "TestToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1040,
							"linearizedBaseContracts": [
								1040,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "TestToken",
							"nameLocation": "488:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 965,
									"libraryName": {
										"id": 963,
										"name": "Address",
										"nameLocations": [
											"528:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 956,
										"src": "528:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "522:26:6",
									"typeName": {
										"id": 964,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "632:2:6",
										"statements": []
									},
									"id": 977,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54657374546f6b656e",
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "581:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5",
														"typeString": "literal_string \"TestToken\""
													},
													"value": "TestToken"
												},
												{
													"hexValue": "5454",
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "594:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
														"typeString": "literal_string \"TT\""
													},
													"value": "TT"
												}
											],
											"id": 970,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 967,
												"name": "ERC20",
												"nameLocations": [
													"575:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "575:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "575:24:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 972,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "616:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "620:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "616:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 971,
												"name": "Ownable",
												"nameLocations": [
													"608:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "608:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "608:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:0:6"
									},
									"scope": 1040,
									"src": "553:81:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "699:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "715:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "719:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 986,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "709:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "709:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 984,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 983,
												"name": "onlyOwner",
												"nameLocations": [
													"689:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "689:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "689:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "649:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "662:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "654:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "674:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "666:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:28:6"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:0:6"
									},
									"scope": 1040,
									"src": "640:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "821:352:6",
										"statements": [
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "839:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "831:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1001,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "831:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"expression": {
														"id": 1003,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "846:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "850:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "846:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "831:25:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1007,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "876:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "882:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "886:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "866:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "866:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "866:27:6"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1012,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "907:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "910:10:6",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "907:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "903:243:6",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "924:222:6",
													"statements": [
														{
															"assignments": [
																1016,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1016,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "944:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1034,
																	"src": "939:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "939:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1026,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "746f6b656e73526563656976656428616464726573732c75696e7432353629",
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "988:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_24a756d1a2c8f2c24ad07b6b6c6a46090bce16d2523224ca3aae963753b3622c",
																					"typeString": "literal_string \"tokensReceived(address,uint256)\""
																				},
																				"value": "tokensReceived(address,uint256)"
																			},
																			{
																				"id": 1022,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "1023:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1023,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "1029:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_24a756d1a2c8f2c24ad07b6b6c6a46090bce16d2523224ca3aae963753b3622c",
																					"typeString": "literal_string \"tokensReceived(address,uint256)\""
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1019,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "964:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "968:19:6",
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "964:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "964:72:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1017,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "956:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "959:4:6",
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "956:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "956:81:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "938:99:6"
														},
														{
															"condition": {
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1055:8:6",
																"subExpression": {
																	"id": 1027,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "1056:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1033,
															"nodeType": "IfStatement",
															"src": "1051:85:6",
															"trueBody": {
																"id": 1032,
																"nodeType": "Block",
																"src": "1065:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1029,
																				"name": "FailedToCallTokenReceivedHook",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 958,
																				"src": "1090:29:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1090:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1031,
																		"nodeType": "RevertStatement",
																		"src": "1083:38:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1162:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1000,
												"id": 1037,
												"nodeType": "Return",
												"src": "1155:11:6"
											}
										]
									},
									"functionSelector": "1a825b75",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferWithCallback",
									"nameLocation": "748:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "777:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "769:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "789:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:28:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "815:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "815:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:6:6"
									},
									"scope": 1040,
									"src": "739:434:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1041,
							"src": "479:696:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								958
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "81:1094:6"
				},
				"id": 6
			},
			"token-bank-v2.sol": {
				"ast": {
					"absolutePath": "token-bank-v2.sol",
					"exportedSymbols": {
						"TestToken": [
							1040
						],
						"TokenBank": [
							1178
						],
						"TokenBankV2": [
							1084
						]
					},
					"id": 1085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1042,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "token-bank.sol",
							"file": "./token-bank.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1085,
							"sourceUnit": 1179,
							"src": "57:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1043,
										"name": "TokenBank",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1178,
										"src": "66:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "test-token.sol",
							"file": "./test-token.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1085,
							"sourceUnit": 1041,
							"src": "103:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1045,
										"name": "TestToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1040,
										"src": "112:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "TokenBank",
										"nameLocations": [
											"174:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "174:9:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "174:9:7"
								}
							],
							"canonicalName": "TokenBankV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1084,
							"linearizedBaseContracts": [
								1084,
								1178
							],
							"name": "TokenBankV2",
							"nameLocation": "159:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "239:7:7",
										"statements": []
									},
									"id": 1058,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1054,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1051,
													"src": "231:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TestToken_$1040",
														"typeString": "contract TestToken"
													}
												}
											],
											"id": 1055,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1053,
												"name": "TokenBank",
												"nameLocations": [
													"221:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1178,
												"src": "221:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "221:17:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "203:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_TestToken_$1040",
													"typeString": "contract TestToken"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "TestToken",
														"nameLocations": [
															"203:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1040,
														"src": "203:9:7"
													},
													"referencedDeclaration": 1040,
													"src": "203:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TestToken_$1040",
														"typeString": "contract TestToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:18:7"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:0:7"
									},
									"scope": 1084,
									"src": "191:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "315:137:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1066,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "333:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "337:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "333:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1070,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "355:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TestToken_$1040",
																			"typeString": "contract TestToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TestToken_$1040",
																			"typeString": "contract TestToken"
																		}
																	],
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "347:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1068,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "347:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "347:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "333:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79207468652054657374546f6b656e20436f6e74726163742063616e2063616c6c2074686520686f6f6b",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "363:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27b144588b0dea5f6da591f9301303fc04d971be153fd88438f4852bd6f02eaa",
																"typeString": "literal_string \"Only the TestToken Contract can call the hook\""
															},
															"value": "Only the TestToken Contract can call the hook"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27b144588b0dea5f6da591f9301303fc04d971be153fd88438f4852bd6f02eaa",
																"typeString": "literal_string \"Only the TestToken Contract can call the hook\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "325:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "325:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "325:86:7"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1076,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "421:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1078,
														"indexExpression": {
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "430:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "421:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1079,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "439:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "421:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "421:24:7"
											}
										]
									},
									"functionSelector": "24a756d1",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "261:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "284:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "276:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "298:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "290:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:30:7"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:0:7"
									},
									"scope": 1084,
									"src": "252:200:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1085,
							"src": "150:304:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:422:7"
				},
				"id": 7
			},
			"token-bank.sol": {
				"ast": {
					"absolutePath": "token-bank.sol",
					"exportedSymbols": {
						"TestToken": [
							1040
						],
						"TokenBank": [
							1178
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "test-token.sol",
							"file": "./test-token.sol",
							"id": 1088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1041,
							"src": "57:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1087,
										"name": "TestToken",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1040,
										"src": "66:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenBank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178
							],
							"name": "TokenBank",
							"nameLocation": "113:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1091,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "147:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "130:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TestToken_$1040",
										"typeString": "contract TestToken"
									},
									"typeName": {
										"id": 1090,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1089,
											"name": "TestToken",
											"nameLocations": [
												"130:9:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1040,
											"src": "130:9:8"
										},
										"referencedDeclaration": 1040,
										"src": "130:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TestToken_$1040",
											"typeString": "contract TestToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc7e286d",
									"id": 1095,
									"mutability": "mutable",
									"name": "deposits",
									"nameLocation": "190:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "158:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1094,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1092,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "166:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "158:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1093,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "177:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "235:31:8",
										"statements": [
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "245:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TestToken_$1040",
															"typeString": "contract TestToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1102,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "253:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TestToken_$1040",
															"typeString": "contract TestToken"
														}
													},
													"src": "245:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TestToken_$1040",
														"typeString": "contract TestToken"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "245:14:8"
											}
										]
									},
									"id": 1106,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "227:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "217:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_TestToken_$1040",
													"typeString": "contract TestToken"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "TestToken",
														"nameLocations": [
															"217:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1040,
														"src": "217:9:8"
													},
													"referencedDeclaration": 1040,
													"src": "217:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TestToken_$1040",
														"typeString": "contract TestToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:18:8"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:8"
									},
									"scope": 1178,
									"src": "205:61:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "376:220:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1112,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "394:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1115,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "420:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "424:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "420:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1119,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "440:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenBank_$1178",
																					"typeString": "contract TokenBank"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenBank_$1178",
																					"typeString": "contract TokenBank"
																				}
																			],
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "432:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1117,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "432:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "432:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1113,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "404:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TestToken_$1040",
																			"typeString": "contract TestToken"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "410:9:8",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "404:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "404:42:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "394:52:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20656e6f75676820746f6b656e20617070726f76656420746f206465706f736974",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "448:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a",
																"typeString": "literal_string \"No enough token approved to deposit\""
															},
															"value": "No enough token approved to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fcb5e75d64ce1b35b7bacb12994d56770167c32e16f6c71b49da3960a35a7a",
																"typeString": "literal_string \"No enough token approved to deposit\""
															}
														],
														"id": 1111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "386:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "386:100:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "386:100:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "515:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "519:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "515:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1133,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "535:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenBank_$1178",
																		"typeString": "contract TokenBank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenBank_$1178",
																		"typeString": "contract TokenBank"
																	}
																],
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "527:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "527:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "527:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1135,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "542:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1126,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "496:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TestToken_$1040",
																"typeString": "contract TestToken"
															}
														},
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "502:12:8",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "496:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "496:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "496:53:8"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1138,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "559:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1141,
														"indexExpression": {
															"expression": {
																"id": 1139,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "568:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "572:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "568:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "559:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1142,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "583:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "559:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "559:30:8"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "345:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "361:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "353:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:16:8"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:0:8"
									},
									"scope": 1178,
									"src": "336:260:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "643:179:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1152,
																	"name": "deposits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "661:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1155,
																"indexExpression": {
																	"expression": {
																		"id": 1153,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "670:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "674:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "670:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "661:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1156,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "685:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "661:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20656e6f75676820746f6b656e2062616c616e636520746f207769746864726177",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "693:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9",
																"typeString": "literal_string \"No enough token balance to withdraw\""
															},
															"value": "No enough token balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d42562335954d091c0a0782c8e9de47f23852db6fc490c3585ce7dc8b6fb5e9",
																"typeString": "literal_string \"No enough token balance to withdraw\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "653:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "653:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1164,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "756:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "760:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "756:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "768:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1161,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "741:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TestToken_$1040",
																"typeString": "contract TestToken"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "747:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "741:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "741:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "741:34:8"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1169,
															"name": "deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "785:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"expression": {
																"id": 1170,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "794:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "798:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "794:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "785:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1173,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "809:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "785:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "785:30:8"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "611:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "628:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "620:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:16:8"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:8"
									},
									"scope": 1178,
									"src": "602:220:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1179,
							"src": "104:720:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:792:8"
				},
				"id": 8
			}
		}
	}
}